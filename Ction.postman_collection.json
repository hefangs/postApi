{
	"info": {
		"_postman_id": "a1f712f7-0886-4ec4-9384-3d6c90f77187",
		"name": "Ction",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12857136"
	},
	"item": [
		{
			"name": "登录",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=>{",
							"    pm.response.to.have.status(200)",
							"})",
							"pm.test(\"console.log token and cookie\",  ()=> {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.token)",
							"    console.log(jsonData.cookie)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/login/cellphone?phone=15000840699&password=hf15000840699",
					"host": [
						"{{url}}"
					],
					"path": [
						"login",
						"cellphone"
					],
					"query": [
						{
							"key": "phone",
							"value": "15000840699"
						},
						{
							"key": "password",
							"value": "hf15000840699"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户播放记录",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Response data length is greater than 0\",  ()=> {",
							"    var jsonData =  pm.response.json()",
							"    pm.expect(jsonData.allData.length).to.be.above(0)",
							"})",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/record?uid={{uid}}&type=0",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"record"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						},
						{
							"key": "type",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "检测手机号码是否已注册",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200);",
							"})",
							"pm.test(\"exist  is 1\",  ()=> {",
							"  var jsonData = pm.response.json()",
							"  pm.expect(jsonData.exist).to.eql(1)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/cellphone/existence/check?phone=15000840699",
					"host": [
						"{{url}}"
					],
					"path": [
						"cellphone",
						"existence",
						"check"
					],
					"query": [
						{
							"key": "phone",
							"value": "15000840699"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "初始化昵称",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/activate/init/profile?nickname=hefangss111112",
					"host": [
						"{{url}}"
					],
					"path": [
						"activate",
						"init",
						"profile"
					],
					"query": [
						{
							"key": "nickname",
							"value": "hefangss111112"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "登录状态",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('id is 358047007',()=>{",
							"  let jsonData  = pm.response.json()",
							"  pm.expect(jsonData.data.account.id).to.be.eql(358047007)",
							"  pm.environment.set('uid',jsonData.data.account.id)",
							"  console.log(jsonData.data.account.id)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/login/status",
					"host": [
						"{{url}}"
					],
					"path": [
						"login",
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('id is 358047007',()=>{",
							"  let jsonData  = pm.response.json()",
							"  pm.expect(jsonData.data.account.id).to.be.eql(358047007)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/login/status",
					"host": [
						"{{url}}"
					],
					"path": [
						"login",
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取账号信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('id is 358047007',()=>{",
							"  let jsonData  = pm.response.json()",
							"  pm.expect(jsonData.account.id).to.be.eql(358047007)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/account",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户信息歌单收藏mvdj数量",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/subcount",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"subcount"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户等级信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('userId is 358047007',()=>{",
							"  let jsonData = pm.response.json()",
							"  pm.expect(jsonData.data.userId).to.be.eql(358047007)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/level",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"level"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户绑定信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('userId is 358047007',()=>{",
							"  let jsonData = pm.response.json()",
							"  jsonData.bindings.forEach((binding)=>{",
							"    pm.expect(binding.userId).to.be.eql(358047007)",
							"  })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/binding?uid={{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"binding"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "更新用户信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/update?gender=0&birthday=1525918298004&nickname=he20020211&province=440000&city=440300&signature=hefang",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"update"
					],
					"query": [
						{
							"key": "gender",
							"value": "0"
						},
						{
							"key": "birthday",
							"value": "1525918298004"
						},
						{
							"key": "nickname",
							"value": "he20020211"
						},
						{
							"key": "province",
							"value": "440000"
						},
						{
							"key": "city",
							"value": "440300"
						},
						{
							"key": "signature",
							"value": "hefang"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "私信和通知",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/pl/count",
					"host": [
						"{{url}}"
					],
					"path": [
						"pl",
						"count"
					]
				}
			},
			"response": []
		},
		{
			"name": "国家编码列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/countries/code/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"countries",
						"code",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let uid = pm.environment.get(\"uid\");",
							"",
							"// 默认值（如果未传递参数，则使用这些默认值）",
							"let defaultLimit = 50;",
							"let defaultOffset = 0;",
							"",
							"// 从环境变量中获取 limit 和 offset",
							"let limit = pm.environment.get(\"limit\");",
							"let offset = pm.environment.get(\"offset\");",
							"",
							"// 检查 uid 是否存在，如果不存在，抛出错误",
							"if (!uid) {",
							"    throw new Error(\"uid is required\");",
							"}",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/user/playlist?uid=${uid}`;",
							"",
							"// 动态添加 limit 和 offset 参数（仅在它们有值时添加）",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    url += `&limit=${limit}`;",
							"} else {",
							"    url += `&limit=${defaultLimit}`;",
							"}",
							"",
							"if (offset !== \"\" && offset !== null && offset !== undefined) {",
							"    url += `&offset=${offset}`;",
							"} else {",
							"    url += `&offset=${defaultOffset}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/playlist",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"playlist"
					]
				}
			},
			"response": []
		},
		{
			"name": "更新歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/update?id=10178922332&name=新歌单&desc=描述&tags=欧美",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"update"
					],
					"query": [
						{
							"key": "id",
							"value": "10178922332"
						},
						{
							"key": "name",
							"value": "新歌单"
						},
						{
							"key": "desc",
							"value": "描述"
						},
						{
							"key": "tags",
							"value": "欧美"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "更新歌单描述",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/desc/update?id=10178922332&desc=描述10178922332",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"desc",
						"update"
					],
					"query": [
						{
							"key": "id",
							"value": "10178922332"
						},
						{
							"key": "desc",
							"value": "描述10178922332"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户历史评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let uid = pm.environment.get(\"uid\");",
							"",
							"// 默认值（如果未传递参数，则使用这些默认值）",
							"let defaultLimit = 10;",
							"let defaultTime = Date.now();",
							"",
							"// 从环境变量中获取 limit 和 offset",
							"let limit = pm.environment.get(\"limit\");",
							"let time = pm.environment.get(\"time\");",
							"",
							"// 检查 uid 是否存在，如果不存在，抛出错误",
							"if (!uid) {",
							"    throw new Error(\"uid is required\");",
							"}",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/user/comment/history?uid=${uid}`;",
							"",
							"// 动态添加 limit 和 offset 参数（仅在它们有值时添加）",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    url += `&limit=${limit}`;",
							"} else {",
							"    url += `&limit=${defaultLimit}`;",
							"}",
							"",
							"if (time !== \"\" && time !== null && time !== undefined) {",
							"    url += `&time=${time}`;",
							"} else {",
							"    url += `&time=${defaultTime}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/comment/history?uid={{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"comment",
						"history"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户电台",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/dj?uid={{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"dj"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户关注列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let uid = pm.environment.get(\"uid\");",
							"",
							"// 默认值（如果未传递参数，则使用这些默认值）",
							"let defaultLimit = 30;",
							"let defaultOffset = 0;",
							"",
							"// 从环境变量中获取 limit 和 offset",
							"let limit = pm.environment.get(\"limit\");",
							"let offset = pm.environment.get(\"offset\");",
							"",
							"// 检查 uid 是否存在，如果不存在，抛出错误",
							"if (!uid) {",
							"    throw new Error(\"uid is required\");",
							"}",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/user/follows?uid=${uid}`;",
							"",
							"// 动态添加 limit 和 offset 参数（仅在它们有值时添加）",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    url += `&limit=${limit}`;",
							"} else {",
							"    url += `&limit=${defaultLimit}`;",
							"}",
							"",
							"if (offset !== \"\" && offset !== null && offset !== undefined) {",
							"    url += `&offset=${offset}`;",
							"} else {",
							"    url += `&offset=${defaultOffset}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/follows?uid={{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"follows"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户粉丝列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let uid = pm.environment.get(\"uid\");",
							"",
							"// 默认值（如果未传递参数，则使用这些默认值）",
							"let defaultLimit = 30;",
							"let defaultOffset = 0;",
							"",
							"// 从环境变量中获取 limit 和 offset",
							"let limit = pm.environment.get(\"limit\");",
							"let offset = pm.environment.get(\"offset\");",
							"",
							"// 检查 uid 是否存在，如果不存在，抛出错误",
							"if (!uid) {",
							"    throw new Error(\"uid is required\");",
							"}",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/user/followeds?uid=${uid}`;",
							"",
							"// 动态添加 limit 和 offset 参数（仅在它们有值时添加）",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    url += `&limit=${limit}`;",
							"} else {",
							"    url += `&limit=${defaultLimit}`;",
							"}",
							"",
							"if (offset !== \"\" && offset !== null && offset !== undefined) {",
							"    url += `&offset=${offset}`;",
							"} else {",
							"    url += `&offset=${defaultOffset}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/followeds?uid={{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"followeds"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户动态",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('set environment resourceId',()=>{",
							"  let jsonData = pm.response.json();",
							"  let resourceId = jsonData.events[0].info.resourceId;",
							"  pm.environment.set('resourceId', resourceId);",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let uid = pm.environment.get(\"uid\");",
							"",
							"// 默认值（如果未传递参数，则使用这些默认值）",
							"let defaultLimit = 30;",
							"let defaultLastTime = Date.now();",
							"",
							"// 从环境变量中获取 limit 和 offset",
							"let limit = pm.environment.get(\"limit\");",
							"let lasttime = pm.environment.get(\"lasttime\");",
							"",
							"// 检查 uid 是否存在，如果不存在，抛出错误",
							"if (!uid) {",
							"    throw new Error(\"uid is required\");",
							"}",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/user/event?uid=${uid}`;",
							"",
							"// 动态添加 limit 和 offset 参数（仅在它们有值时添加）",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    url += `&limit=${limit}`;",
							"} else {",
							"    url += `&limit=${defaultLimit}`;",
							"}",
							"",
							"if (lasttime !== \"\" && lasttime !== null && lasttime !== undefined) {",
							"    url += `&lasttime=${lasttime}`;",
							"} else {",
							"    url += `&lasttime=${defaultLastTime}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/event?uid={{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"event"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "转发用户动态",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"set environment eventId\",  ()=> {",
							"  let jsonData = pm.response.json()",
							"  pm.environment.set('eventId',jsonData.data.eventId)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/event/forward?evId={{resourceId}}&uid={{uid}}&forwards=内容",
					"host": [
						"{{url}}"
					],
					"path": [
						"event",
						"forward"
					],
					"query": [
						{
							"key": "evId",
							"value": "{{resourceId}}"
						},
						{
							"key": "uid",
							"value": "{{uid}}"
						},
						{
							"key": "forwards",
							"value": "内容"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "删除用户动态",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/event/del?evId={{eventId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"event",
						"del"
					],
					"query": [
						{
							"key": "evId",
							"value": "{{eventId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "分享文本、歌曲、歌单、mv、电台、电台节目到动态",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = pm.environment.get(\"id\");",
							"let sharedResourceType = pm.environment.get(\"sharedResourceType\");",
							"let msg = pm.environment.get(\"msg\");",
							"",
							"",
							"let defaultType",
							"let defaultTypeAll = [\"song\", \"playlist\", \"mv\", \"djradio\", \"djprogram\", \"album\"]",
							"if (!defaultTypeAll.includes(sharedResourceType)) {",
							"    defaultType = \"song\";",
							"}",
							"let defaultMsg ='share resource'",
							"if (defaultMsg.length > 140) {",
							"    defaultMsg = defaultMsg.substring(0, 140);",
							"}",
							"",
							"",
							"if (!id) {",
							"    throw new Error(\"id is required\");",
							"}",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/share/resource?id=${id}`;",
							"",
							"if (sharedResourceType !== \"\" && sharedResourceType !== null && sharedResourceType !== undefined) {",
							"    url += `&type=${sharedResourceType}`;",
							"} else {",
							"    url += `&type=${defaultType}`;",
							"}",
							"",
							"if (msg !== \"\" && msg !== null && msg !== undefined) {",
							"    url += `&msg=${msg}`;",
							"} else {",
							"    url += `&msg=${defaultMsg}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/share/resource?id=28302514",
					"host": [
						"{{url}}"
					],
					"path": [
						"share",
						"resource"
					],
					"query": [
						{
							"key": "id",
							"value": "28302514",
							"description": "分享的歌曲id"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取动态评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/event?threadId=A_EV_2_6559519868_32953014",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"event"
					],
					"query": [
						{
							"key": "threadId",
							"value": "A_EV_2_6559519868_32953014"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "关注用户",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/follow?id=8353&t=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"follow"
					],
					"query": [
						{
							"key": "id",
							"value": "8353"
						},
						{
							"key": "t",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取用户播放记录",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/record?uid={{uid}}&type=0",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"record"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						},
						{
							"key": "type",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取热门话题",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let defaultLimit = 20;",
							"let defaultOffset = 0;",
							"",
							"let limit = pm.environment.get(\"limit\");",
							"let offset = pm.environment.get(\"offset\");",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/hot/topic?`;",
							"let params = [];",
							"",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    params.push(`limit=${limit}`);",
							"} else {",
							"    params.push(`limit=${defaultLimit}`);",
							"}",
							"",
							"if (offset !== \"\" && offset !== null && offset !== undefined) {",
							"    params.push(`offset=${offset}`);",
							"} else {",
							"    params.push(`offset=${defaultOffset}`);",
							"}",
							"",
							"// 将参数连接起来",
							"url += params.join('&');",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/hot/topic",
					"host": [
						"{{url}}"
					],
					"path": [
						"hot",
						"topic"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取话题详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/topic/detail/event/hot?actid=111551188",
					"host": [
						"{{url}}"
					],
					"path": [
						"topic",
						"detail",
						"event",
						"hot"
					],
					"query": [
						{
							"key": "actid",
							"value": "111551188"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取话题详情热门动态",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/topic/detail/event/hot?actid=115842105",
					"host": [
						"{{url}}"
					],
					"path": [
						"topic",
						"detail",
						"event",
						"hot"
					],
					"query": [
						{
							"key": "actid",
							"value": "115842105"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "心动模式/智能播放",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"",
							"let defaultSig = 1877996649;",
							"",
							"",
							"let sig = pm.environment.get(\"sig\");",
							"let id = 28302514",
							"let pid = 893126993",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/playmode/intelligence/list?id=${id}&pid=${pid}`",
							"",
							"",
							"",
							"if (sig !== \"\" && sig !== null && sig !== undefined) {",
							"    url += `&sig=${sig}`;",
							"} else {",
							"    url += `&sig=${defaultSig}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playmode/intelligence/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"playmode",
						"intelligence",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取动态消息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/event?pagesize=20&lasttime=1718473149222",
					"host": [
						"{{url}}"
					],
					"path": [
						"event"
					],
					"query": [
						{
							"key": "pagesize",
							"value": "20"
						},
						{
							"key": "lasttime",
							"value": "1718473149222"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌手分类列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get(\"limit\")",
							"let offset = pm.environment.get(\"offset\")",
							"let initial = pm.environment.get(\"initial\")",
							"let type = pm.environment.get(\"singerType\")",
							"let area = pm.environment.get(\"languageArea\")",
							"",
							"// 默认值",
							"let defaultLimit = 30",
							"let defaultOffset = 0",
							"let defaultInitial = 'b'",
							"let defaultSingerType = [-1,1,2,3]",
							"let randomType = defaultSingerType[Math.floor(Math.random() * defaultSingerType.length)];",
							"let defaultLanguageArea = [-1, 7, 96, 8, 16, 0]",
							"let randomArea = defaultLanguageArea[Math.floor(Math.random() * defaultLanguageArea.length)];",
							"",
							"",
							"let url = `http://localhost:3000/artist/list/`",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    url += `&limit=${limit}`;",
							"} else {",
							"    url += `&limit=${defaultLimit}`;",
							"}",
							"",
							"if (offset !== \"\" && offset !== null && offset !== undefined) {",
							"    url += `&offset=${offset}`;",
							"} else {",
							"    url += `&offset=${defaultOffset}`;",
							"}",
							"if (initial !== \"\" && initial !== null && initial !== undefined) {",
							"    url += `&initial=${initial}`;",
							"} else {",
							"    url += `&initial=${defaultInitial}`;",
							"}",
							"",
							"if (type !== \"\" && type !== null && type !== undefined) {",
							"    url += `&type=${type}`;",
							"} else {",
							"    url += `&type=${randomType}`;",
							"}",
							"if (area !== \"\" && area !== null && area !== undefined) {",
							"    url += `&area=${area}`;",
							"} else {",
							"    url += `&area=${randomArea}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "收藏歌手",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('message is success',()=>{",
							"  let jsonData = pm.response.json()",
							"  pm.expect(jsonData.message).to.be.eql('success')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/sub?id=6469&t=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"sub"
					],
					"query": [
						{
							"key": "id",
							"value": "6469"
						},
						{
							"key": "t",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "取消收藏歌手",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('message is success',()=>{",
							"  let jsonData = pm.response.json()",
							"  pm.expect(jsonData.message).to.be.eql('success')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/sub?id=6469&t=0",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"sub"
					],
					"query": [
						{
							"key": "id",
							"value": "6469"
						},
						{
							"key": "t",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌手热门 50 首歌曲",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('songs.length is 50',()=>{",
							"  let jsonData = pm.response.json()",
							"  pm.expect(jsonData.songs.length).to.equal(50);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/top/song?id=6452",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"top",
						"song"
					],
					"query": [
						{
							"key": "id",
							"value": "6452"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌手全部歌曲",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let defaultLimit = 50;",
							"let defaultOffset = 0;",
							"let id  =  6469",
							"",
							"let limit = pm.environment.get(\"limit\")",
							"let offset = pm.environment.get(\"offset\")",
							"let order = pm.environment.get(\"order\")",
							"let defaultOrder = ['hot','time']",
							"let ramdomOrder = defaultOrder[Math.floor(Math.random()*defaultOrder.length)]",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/artist/songs?id=${id}`",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    url += `&limit=${limit}`;",
							"} else {",
							"    url += `&limit=${defaultLimit}`;",
							"}",
							"",
							"if (offset !== \"\" && offset !== null && offset !== undefined) {",
							"    url += `&offset=${offset}`;",
							"} else {",
							"    url += `&offset=${defaultOffset}`;",
							"}",
							"",
							"if (order !== \"\" && order !== null && order !== undefined) {",
							"    url += `&order=${order}`;",
							"} else {",
							"    url += `&order=${ramdomOrder}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/songs",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"songs"
					]
				}
			},
			"response": []
		},
		{
			"name": "收藏的歌手列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test('alias is Phil Chang',()=>{",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data[0].alias).to.include('Phil Chang')",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let defaultLimit = 50;",
							"let defaultOffset = 0;",
							"",
							"let limit = pm.environment.get(\"limit\")",
							"let offset = pm.environment.get(\"offset\")",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/artist/sublist/`",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    url += `&limit=${limit}`;",
							"} else {",
							"    url += `&limit=${defaultLimit}`;",
							"}",
							"",
							"if (offset !== \"\" && offset !== null && offset !== undefined) {",
							"    url += `&offset=${offset}`;",
							"} else {",
							"    url += `&offset=${defaultOffset}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/sublist",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"sublist"
					]
				}
			},
			"response": []
		},
		{
			"name": "收藏的专栏",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test('alias is Phil Chang',()=>{",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data[0].alias).to.include('Phil Chang')",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let defaultLimit = 50;",
							"let defaultOffset = 0;",
							"",
							"let limit = pm.environment.get(\"limit\")",
							"let offset = pm.environment.get(\"offset\")",
							"",
							"// 构建基本 URL",
							"let url = `http://localhost:3000/topic/sublist/`",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    url += `&limit=${limit}`;",
							"} else {",
							"    url += `&limit=${defaultLimit}`;",
							"}",
							"",
							"if (offset !== \"\" && offset !== null && offset !== undefined) {",
							"    url += `&offset=${offset}`;",
							"} else {",
							"    url += `&offset=${defaultOffset}`;",
							"}",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/topic/sublist",
					"host": [
						"{{url}}"
					],
					"path": [
						"topic",
						"sublist"
					]
				}
			},
			"response": []
		},
		{
			"name": "收藏视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('收藏视频成功',()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.message).to.be.equal('收藏成功')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/video/sub?id=AD48F9223DE8BF65E6F2526B29D48BF6&t=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"video",
						"sub"
					],
					"query": [
						{
							"key": "id",
							"value": "AD48F9223DE8BF65E6F2526B29D48BF6"
						},
						{
							"key": "t",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "取消收藏视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('取消收藏视频成功',()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.message).to.be.equal('取消收藏成功')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/video/sub?id=AD48F9223DE8BF65E6F2526B29D48BF6&t=0",
					"host": [
						"{{url}}"
					],
					"path": [
						"video",
						"sub"
					],
					"query": [
						{
							"key": "id",
							"value": "AD48F9223DE8BF65E6F2526B29D48BF6"
						},
						{
							"key": "t",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "收藏MV",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('收藏mv成功',()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.message).to.be.equal('收藏成功')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mv/sub?mvid=5764014&t=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"mv",
						"sub"
					],
					"query": [
						{
							"key": "mvid",
							"value": "5764014"
						},
						{
							"key": "t",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "取消收藏MV",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('取消收藏mv成功',()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.message).to.be.equal('取消收藏成功')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mv/sub?mvid=5764014&t=0",
					"host": [
						"{{url}}"
					],
					"path": [
						"mv",
						"sub"
					],
					"query": [
						{
							"key": "mvid",
							"value": "5764014"
						},
						{
							"key": "t",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "收藏的 MV 列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('收藏mv列表',()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.length).to.above(1)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mv/sublist",
					"host": [
						"{{url}}"
					],
					"path": [
						"mv",
						"sublist"
					]
				}
			},
			"response": []
		},
		{
			"name": "歌单分类",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('包含 categories 字段',()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data).to.have.property('categories')",
							"  pm.expect(data.categories).to.be.an('object')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/catlist",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"catlist"
					]
				}
			},
			"response": []
		},
		{
			"name": "热门歌单分类",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('包含 tags 字段',()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data).to.have.property('tags')",
							"  pm.expect(data.tags).to.be.an('array')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/hot",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"hot"
					]
				}
			},
			"response": []
		},
		{
			"name": "歌单 ( 网友精选碟 )",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"playlists.length > 0\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.playlists.length).to.be.above(0)",
							"// })",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let cat = pm.environment.get('cat');",
							"let limit = pm.environment.get('limit');",
							"let order = pm.environment.get('order');",
							"let offset = pm.environment.get('offset');",
							"",
							"const defaultLimit = 50;",
							"const defaultOffset = 0;",
							"const defaultCat = ['全部', '华语', '古风', '欧美', '流行'];",
							"const defaultOrder = ['new', 'hot'];",
							"",
							"const randomCat = defaultCat[Math.floor(Math.random() * defaultCat.length)];",
							"const randomOrder = defaultOrder[Math.floor(Math.random() * defaultOrder.length)];",
							"",
							"let url = `http://localhost:3000/top/playlist?`;",
							"",
							"const params = [];",
							"",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"    params.push(`limit=${limit}`);",
							"} else {",
							"    params.push(`limit=${defaultLimit}`);",
							"}",
							"if (offset !== \"\" && offset !== null && offset !== undefined) {",
							"    params.push(`offset=${offset}`);",
							"} else {",
							"    params.push(`offset=${defaultOffset}`);",
							"}",
							"if (cat !== \"\" && cat !== null && cat !== undefined) {",
							"    params.push(`cat=${cat}`);",
							"} else {",
							"    params.push(`cat=${randomCat}`);",
							"}",
							"if (order !== \"\" && order !== null && order !== undefined) {",
							"    params.push(`order=${order}`);",
							"} else {",
							"    params.push(`order=${randomOrder}`);",
							"}",
							"",
							"// 将参数连接起来",
							"url += params.join('&');",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/top/playlist",
					"host": [
						"{{url}}"
					],
					"path": [
						"top",
						"playlist"
					]
				}
			},
			"response": []
		},
		{
			"name": "精品歌单标签列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"get tags.length > 0\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.tags.length).to.be.above(0)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/highquality/tags",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"highquality",
						"tags"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取精品歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"playlists.length > 0\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.playlists.length).to.be.above(0)",
							"})",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit');",
							"let cat = pm.environment.get('cat');",
							"let before = pm.environment.get('before');",
							"",
							"const defaultLimit = 50;",
							"const defaultBefore = Date.now();",
							"const defaultCat = ['华语', '古风', '欧美', '流行', '全部'];",
							"const randomCat = defaultCat[Math.floor(Math.random() * defaultCat.length)];",
							"",
							"let url = `http://localhost:3000/top/playlist/highquality?`;",
							"",
							"const params = [];",
							"",
							"if (limit !== \"\" && limit !== null && limit !== undefined) {",
							"  params.push(`limit=${limit}`);",
							"} else {",
							"  params.push(`limit=${defaultLimit}`);",
							"}",
							"",
							"if (before !== \"\" && before !== null && before !== undefined) {",
							"  params.push(`before=${before}`);",
							"} else {",
							"  params.push(`before=${defaultBefore}`);",
							"}",
							"",
							"if (cat !== \"\" && cat !== null && cat !== undefined) {",
							"  params.push(`cat=${cat}`);",
							"} else {",
							"  params.push(`cat=${randomCat}`);",
							"}",
							"",
							"// 将参数连接起来",
							"url += params.join('&');",
							"",
							"// 更新请求 URL",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/top/playlist/highquality",
					"host": [
						"{{url}}"
					],
					"path": [
						"top",
						"playlist",
						"highquality"
					]
				}
			},
			"response": []
		},
		{
			"name": "相关歌单推荐",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"playlists.length > 0\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.playlists.length).to.be.above(0)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/related/playlist?id=504353039",
					"host": [
						"{{url}}"
					],
					"path": [
						"related",
						"playlist"
					],
					"query": [
						{
							"key": "id",
							"value": "504353039"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取歌单详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"Response contains 'playlist' and it is an object\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data).to.have.property('playlist')",
							"  pm.expect(data.playlist).to.be.an('object')",
							"",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let s = pm.environment.get('s')",
							"let defaultS = 8",
							"let id = 504353039",
							"if(!id){",
							"  throw new Error('id not found')",
							"}",
							"let url = `http://localhost:3000/playlist/detail?id=${id}`;",
							"",
							"",
							"if(s !== \"\" && s !== undefined && s !== null){",
							"  url+=`&s=${s}`",
							"}else{",
							"    url+=`&s=${defaultS}`",
							"}",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/detail",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"detail"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取歌单所有歌曲",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"Response contains 'playlist' and it is an object\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data).to.have.property('playlist')",
							"  pm.expect(data.playlist).to.be.an('object')",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 504353039",
							"let limit =pm.environment.get('limit')",
							"let offset =pm.environment.get('offset')",
							"",
							"defaultLimit = 10",
							"defaultOffset= 0",
							"if(!id){",
							"  throw new Error('id not found')",
							"}",
							"let url = `http://localhost:3000/playlist/detail?id=${id}`;",
							"",
							"if(limit !== \"\" && limit !== undefined && limit !== null){",
							"  url+=`&limit=${limit}`",
							"}else{",
							"    url+=`&limit=${defaultLimit}`",
							"}",
							"if(offset !== \"\" && offset !== undefined && offset !== null){",
							"  url+=`&offset=${offset}`",
							"}else{",
							"    url+=`&offset=${defaultOffset}`",
							"}",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/track/all",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"track",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "歌单详情动态",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"playCount>1000\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.playCount).to.be.above(1000)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/detail/dynamic?id=504353039",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"detail",
						"dynamic"
					],
					"query": [
						{
							"key": "id",
							"value": "504353039"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌单更新播放量",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/update/playcount?id=504353039",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"update",
						"playcount"
					],
					"query": [
						{
							"key": "id",
							"value": "504353039"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取音乐 url",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('data length > 0',()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let ids = '28302514,1877996649,1855074345'",
							"let br = pm.environment.get('br')",
							"let defaultBr = 999000",
							"",
							"let url = `http://localhost:3000/song/url?id=${ids}`",
							"",
							"if (br !== \"\" && br !==null && br !== undefined){",
							"  url += `&br=${br}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/song/url",
					"host": [
						"{{url}}"
					],
					"path": [
						"song",
						"url"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取音乐 url - 新版",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test('data length > 0',()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let ids = '28302514,1877996649,1855074345'",
							"let level = ['standard','higher','exhigh','lossless','hires','Hi-Res','jyeffect','sky','jymaster']",
							"let romdomLevel = level[Math.floor(Math.random() * level.length)]",
							"",
							"let url = `http://localhost:3000/song/url/v1?id=${ids}&level=${romdomLevel}`",
							"",
							"",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/song/url/v1",
					"host": [
						"{{url}}"
					],
					"path": [
						"song",
						"url",
						"v1"
					]
				}
			},
			"response": []
		},
		{
			"name": "音乐是否可用",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(' success is true',()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.success).to.be.eql(true)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/check/music?id=28302514",
					"host": [
						"{{url}}"
					],
					"path": [
						"check",
						"music"
					],
					"query": [
						{
							"key": "id",
							"value": "28302514"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "搜索",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"let keywords = '张学友'",
							"let type = pm.environment.get('type')",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"defaultLimit = 30",
							"defaultOffset = 0",
							"defaultType = [1,10,100,1000,1002,1004,1006,1009,1014,1018,2000]",
							"",
							"romdomType =defaultType[Math.floor(Math.random() * defaultType.length)]",
							"",
							"let url = `http://localhost:3000/search?keywords=${keywords}`",
							"",
							"if(limit!==\"\" && limit!== null && limit!==undefined){",
							"  url +=`&limit=${limit}`",
							"}else{",
							"  url +=`&limit=${defaultLimit}`",
							"}",
							"",
							"if(offset!==\"\" && offset!== null && offset!==undefined){",
							"  url +=`&offset=${offset}`",
							"}else{",
							"  url +=`&offset=${defaultOffset}`",
							"}",
							"",
							"if(type!==\"\" && type!== null && type!==undefined){",
							"  url +=`&type=${type}`",
							"}else{",
							"  url +=`&type=${romdomType}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/search",
					"host": [
						"{{url}}"
					],
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "默认搜索关键词",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/search/default",
					"host": [
						"{{url}}"
					],
					"path": [
						"search",
						"default"
					]
				}
			},
			"response": []
		},
		{
			"name": "热搜列表(简略)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"hots length > 0\", ()=> {",
							"    let data = pm.response.json()",
							"    pm.expect(data.result.hots.length).to.be.above(0)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/search/hot",
					"host": [
						"{{url}}"
					],
					"path": [
						"search",
						"hot"
					]
				}
			},
			"response": []
		},
		{
			"name": "热搜列表(详细)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"hots length > 0\", ()=> {",
							"    let data = pm.response.json()",
							"    pm.expect(data.data.length).to.be.above(0)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/search/hot/detail",
					"host": [
						"{{url}}"
					],
					"path": [
						"search",
						"hot",
						"detail"
					]
				}
			},
			"response": []
		},
		{
			"name": "搜索建议",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"allMatch length > 0\", ()=> {",
							"    let data = pm.response.json()",
							"    pm.expect(data.result.allMatch.length).to.be.above(0)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let keywords = '张学友'",
							"let type = pm.environment.get('type')",
							"",
							"let defaultType = 'mobile'",
							"",
							"let url = `http://localhost:3000/search/suggest?keywords=${keywords}`",
							"",
							"if(type !==\"\" && type !== null && type!== undefined){",
							"  url+=`&type=${type}`",
							"}else{",
							"  url+=`&type=${defaultType}`",
							"}",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/search/suggest",
					"host": [
						"{{url}}"
					],
					"path": [
						"search",
						"suggest"
					]
				}
			},
			"response": []
		},
		{
			"name": "搜索多重匹配",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"allMatch length > 0\", ()=> {",
							"    let data = pm.response.json()",
							"    pm.expect(data.result.albums.length).to.be.above(0)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/search/suggest?keywords=张学友",
					"host": [
						"{{url}}"
					],
					"path": [
						"search",
						"suggest"
					],
					"query": [
						{
							"key": "keywords",
							"value": "张学友"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "新建歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"create playlist success > 0\", ()=> {",
							"    let data = pm.response.json()",
							"    pm.expect(data.playlist.name).to.not.be.empty",
							"    pm.environment.set('create_playlist',data.id)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let name =`3208歌单`",
							"let privacy = pm.environment.get('privacy')",
							"let type = pm.environment.get('type')",
							"",
							"let defaultPrivacy = 0",
							"let defaultType = 'NORMAL'",
							"",
							"let url =`http://localhost:3000/playlist/create?name=${name}`",
							"",
							"if(privacy !== \"\" && privacy !== null && privacy !== undefined){",
							"  url += `&privacy=${privacy}`",
							"}else{",
							"  url += `&privacy=${defaultPrivacy}`",
							"}",
							"if(type !== \"\" && type !== null && type !== undefined){",
							"  url += `&type=${type}`",
							"}else{",
							"  url += `&type=${defaultType}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/create",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "删除歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/delete?id={{create_playlist}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"delete"
					],
					"query": [
						{
							"key": "id",
							"value": "{{create_playlist}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "收藏歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/subscribe?id=988690134&t=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"subscribe"
					],
					"query": [
						{
							"key": "id",
							"value": "988690134"
						},
						{
							"key": "t",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "取消收藏歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/subscribe?id=988690134&t=2",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"subscribe"
					],
					"query": [
						{
							"key": "id",
							"value": "988690134"
						},
						{
							"key": "t",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌单收藏者",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"total > 0\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.total).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"defaultLimit = 20",
							"defaultOffset = 0",
							"",
							"let id = 988690134",
							"let url = `http://localhost:3000/playlist/subscribers?id=${id}`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  url+=`&limit=${limit}`",
							"}else{",
							"   url+=`&limit=${defaultLimit}`",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  url+=`&offset=${offset}`",
							"}else{",
							"   url+=`&offset=${defaultOffset}`",
							"}",
							"",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/subscribers",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"subscribers"
					]
				}
			},
			"response": []
		},
		{
			"name": "对歌单添加歌曲",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"count > 2\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.body.count).to.be.above(2)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/tracks?op=add&pid=10178922332&tracks=258498,28302514",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"tracks"
					],
					"query": [
						{
							"key": "op",
							"value": "add"
						},
						{
							"key": "pid",
							"value": "10178922332"
						},
						{
							"key": "tracks",
							"value": "258498,28302514"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "对歌单删除歌曲",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"count > 0\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.body.count).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/tracks?op=del&pid=10178922332&tracks=258498,28302514",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"tracks"
					],
					"query": [
						{
							"key": "op",
							"value": "del"
						},
						{
							"key": "pid",
							"value": "10178922332"
						},
						{
							"key": "tracks",
							"value": "258498,28302514"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "收藏视频到视频歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"count > 0\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.tracks[0].id).to.be(186041)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/track/add?pid=10183249787&ids=186041",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"track",
						"add"
					],
					"query": [
						{
							"key": "pid",
							"value": "10183249787"
						},
						{
							"key": "ids",
							"value": "186041"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "删除视频歌单里的视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"count > 0\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.tracks[0].id).to.be(186041)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/track/delete?pid=10183249787&ids=186041",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"track",
						"delete"
					],
					"query": [
						{
							"key": "pid",
							"value": "10183249787"
						},
						{
							"key": "ids",
							"value": "186041"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "最近播放的视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"videos.length > 0\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.videos.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/video/recent",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"video",
						"recent"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取歌词",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"lyric field is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.lrc.lyric).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/lyric?id=28302514",
					"host": [
						"{{url}}"
					],
					"path": [
						"lyric"
					],
					"query": [
						{
							"key": "id",
							"value": "28302514"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取逐字歌词",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"lyric field is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.lrc.lyric).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/lyric/new?id=28302514",
					"host": [
						"{{url}}"
					],
					"path": [
						"lyric",
						"new"
					],
					"query": [
						{
							"key": "id",
							"value": "28302514"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "新歌速递",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"  pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let type = [0,7,8,16,96]",
							"let romdomType = type[Math.floor(Math.random() * type.length)]",
							"",
							"let url = `http://localhost:3000/top/song?type=${romdomType}`",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/top/song",
					"host": [
						"{{url}}"
					],
					"path": [
						"top",
						"song"
					]
				}
			},
			"response": []
		},
		{
			"name": "首页-发现",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"data is not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data).to.not.be.empty",
							"//   pm.expect(data.data.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let refresh = pm.environment.get('refresh');",
							"let cursor = pm.environment.get('cursor');",
							"",
							"let defaultRefresh = false",
							"let defaultCursor = ''",
							"",
							"let url = `http://localhost:3000/homepage/block/page?`",
							"",
							"let params = []",
							"",
							"if (refresh !== \"\" && refresh !== null && refresh !== undefined) {",
							"  params.push(`refresh=${refresh}`)",
							"} else {",
							"  params.push(`refresh=${defaultRefresh}`)",
							"}",
							"",
							"if (cursor !== \"\" && cursor !== null && cursor !== undefined) {",
							"  params.push(`cursor=${cursor}`)",
							"} else {",
							"  params.push(`cursor=${defaultCursor}`)",
							"}",
							"",
							"url += params.join('&')",
							"pm.request.url = url",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/homepage/block/page",
					"host": [
						"{{url}}"
					],
					"path": [
						"homepage",
						"block",
						"page"
					]
				}
			},
			"response": []
		},
		{
			"name": "首页-发现-圆形图标入口列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"  pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/homepage/dragon/ball",
					"host": [
						"{{url}}"
					],
					"path": [
						"homepage",
						"dragon",
						"ball"
					]
				}
			},
			"response": []
		},
		{
			"name": "歌曲评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  // pm.expect(data.data).to.not.be.empty",
							"  pm.expect(data.total).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 1877996649",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let defaultLimit = 20",
							"let defaultOffset = 0",
							"",
							"let url = `http://localhost:3000/comment/music?id=${id}`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined ){",
							"  url += `&limit=${limit}`",
							"}else{",
							"  url += `&limit=${defaultLimit}`",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined ){",
							"  url += `&offset=${offset}`",
							"}else{",
							"  url += `&offset=${defaultOffset}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/music",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"music"
					]
				}
			},
			"response": []
		},
		{
			"name": "楼层评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  // pm.expect(data.data).to.not.be.empty",
							"  // pm.expect(data.total).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 1877996649",
							"let parentCommentId = 6132222571",
							"let type = [0,1,2,3,4,5,6,7]",
							"let romdomType = type[Math.floor(Math.random() * type.length)]",
							"",
							"let limit = pm.environment.get('limit')",
							"let time = pm.environment.get('time')",
							"let defaultLimit = 20",
							"let defaultTime = Date.now()",
							"",
							"let url = `http://localhost:3000/comment/floor?parentCommentId=${parentCommentId}&id=${id}&type=${romdomType}`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined ){",
							"  url += `&limit=${limit}`",
							"}else{",
							"  url += `&limit=${defaultLimit}`",
							"}",
							"",
							"if(time !== \"\" && time !== null && time !== undefined ){",
							"  url += `&time=${time}`",
							"}else{",
							"  url += `&time=${defaultTime}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/floor",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"floor"
					]
				}
			},
			"response": []
		},
		{
			"name": "专辑评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  // pm.expect(data.data).to.not.be.empty",
							"  pm.expect(data.total).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 35280175",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let before = pm.environment.get('before')",
							"let defaultLimit = 20",
							"let defaultOffset = 0",
							"let defaultBefore = Date.now()",
							"",
							"let url = `http://localhost:3000/comment/album?id=${id}`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined ){",
							"  url += `&limit=${limit}`",
							"}else{",
							"  url += `&limit=${defaultLimit}`",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined ){",
							"  url += `&offset=${offset}`",
							"}else{",
							"  url += `&offset=${defaultOffset}`",
							"}",
							"",
							"if(before !== \"\" && before !== null && before !== undefined ){",
							"  url += `&before=${before}`",
							"}else{",
							"  url += `&before=${defaultBefore}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/album",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"album"
					]
				}
			},
			"response": []
		},
		{
			"name": "歌单评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.comments.length).to.be.above(1)",
							"  pm.expect(data.total).to.be.above(1)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 504353039",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let before = pm.environment.get('before')",
							"let defaultLimit = 20",
							"let defaultOffset = 0",
							"let defaultBefore = Date.now()",
							"",
							"let url = `http://localhost:3000/comment/playlist?id=${id}`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined ){",
							"  url += `&limit=${limit}`",
							"}else{",
							"  url += `&limit=${defaultLimit}`",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined ){",
							"  url += `&offset=${offset}`",
							"}else{",
							"  url += `&offset=${defaultOffset}`",
							"}",
							"",
							"if(before !== \"\" && before !== null && before !== undefined ){",
							"  url += `&before=${before}`",
							"}else{",
							"  url += `&before=${defaultBefore}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/playlist",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"playlist"
					]
				}
			},
			"response": []
		},
		{
			"name": "mv 评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.comments.length).to.be.above(1)",
							"  pm.expect(data.total).to.be.above(1)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 5436712",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let before = pm.environment.get('before')",
							"let defaultLimit = 20",
							"let defaultOffset = 0",
							"let defaultBefore = Date.now()",
							"",
							"let url = `http://localhost:3000/comment/mv?id=${id}`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined ){",
							"  url += `&limit=${limit}`",
							"}else{",
							"  url += `&limit=${defaultLimit}`",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined ){",
							"  url += `&offset=${offset}`",
							"}else{",
							"  url += `&offset=${defaultOffset}`",
							"}",
							"",
							"if(before !== \"\" && before !== null && before !== undefined ){",
							"  url += `&before=${before}`",
							"}else{",
							"  url += `&before=${defaultBefore}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/playlist",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"playlist"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台节目评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.comments.length).to.be.above(1)",
							"  pm.expect(data.total).to.be.above(1)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 794062371",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let before = pm.environment.get('before')",
							"let defaultLimit = 20",
							"let defaultOffset = 0",
							"let defaultBefore = Date.now()",
							"",
							"let url = `http://localhost:3000/comment/dj?id=${id}`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined ){",
							"  url += `&limit=${limit}`",
							"}else{",
							"  url += `&limit=${defaultLimit}`",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined ){",
							"  url += `&offset=${offset}`",
							"}else{",
							"  url += `&offset=${defaultOffset}`",
							"}",
							"",
							"if(before !== \"\" && before !== null && before !== undefined ){",
							"  url += `&before=${before}`",
							"}else{",
							"  url += `&before=${defaultBefore}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/playlist",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"playlist"
					]
				}
			},
			"response": []
		},
		{
			"name": "视频评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.comments.length).to.be.above(1)",
							"  pm.expect(data.total).to.be.above(1)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = `89ADDE33C0AAE8EC14B99F6750DB954D`",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let before = pm.environment.get('before')",
							"let defaultLimit = 20",
							"let defaultOffset = 0",
							"let defaultBefore = Date.now()",
							"",
							"let url = `http://localhost:3000/comment/video?id=${id}`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined ){",
							"  url += `&limit=${limit}`",
							"}else{",
							"  url += `&limit=${defaultLimit}`",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined ){",
							"  url += `&offset=${offset}`",
							"}else{",
							"  url += `&offset=${defaultOffset}`",
							"}",
							"",
							"if(before !== \"\" && before !== null && before !== undefined ){",
							"  url += `&before=${before}`",
							"}else{",
							"  url += `&before=${defaultBefore}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/playlist",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"playlist"
					]
				}
			},
			"response": []
		},
		{
			"name": "热门评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  // let data = pm.response.json()",
							"  // pm.expect(data.comments.length).to.be.above(1)",
							"  // pm.expect(data.total).to.be.above(1)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 408280693",
							"let type = [0,1,2,3,4,5,6,7]",
							"let romdomType = type[Math.floor(Math.random() * type.length)]",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let before = pm.environment.get('before')",
							"let defaultLimit = 20",
							"let defaultOffset = 0",
							"let defaultBefore = Date.now()",
							"",
							"let url = `http://localhost:3000/comment/hot?id=${id}&type=${romdomType}`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined ){",
							"  url += `&limit=${limit}`",
							"}else{",
							"  url += `&limit=${defaultLimit}`",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined ){",
							"  url += `&offset=${offset}`",
							"}else{",
							"  url += `&offset=${defaultOffset}`",
							"}",
							"",
							"if(before !== \"\" && before !== null && before !== undefined ){",
							"  url += `&before=${before}`",
							"}else{",
							"  url += `&before=${defaultBefore}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/playlist",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"playlist"
					]
				}
			},
			"response": []
		},
		{
			"name": "新版评论接口",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data is not empty\", ()=> {",
							"  // let data = pm.response.json()",
							"  // pm.expect(data.comments.length).to.be.above(1)",
							"  // pm.expect(data.total).to.be.above(1)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 1407551413;",
							"let type = [0, 1, 2, 3, 4, 5, 6, 7];",
							"let randomType = type[Math.floor(Math.random() * type.length)];",
							"",
							"let pageNo = pm.environment.get('pageNo');",
							"let cursor = pm.environment.get('cursor');",
							"let pageSize = pm.environment.get('pageSize');",
							"let sortType = pm.environment.get('sortType');",
							"",
							"let defaultPageNo = 1;",
							"let defaultPageSize = 20;",
							"let defaultSortType = [1, 2, 3];",
							"let randomSortType = defaultSortType[Math.floor(Math.random() * defaultSortType.length)];",
							"let defaultCursor = '';",
							"",
							"let url = `http://localhost:3000/comment/new?id=${id}&type=${randomType}`;",
							"",
							"if (pageNo !== \"\" && pageNo !== null && pageNo !== undefined) {",
							"  url += `&pageNo=${pageNo}`;",
							"} else {",
							"  url += `&pageNo=${defaultPageNo}`;",
							"}",
							"",
							"if (pageSize !== \"\" && pageSize !== null && pageSize !== undefined) {",
							"  url += `&pageSize=${pageSize}`;",
							"} else {",
							"  url += `&pageSize=${defaultPageSize}`;",
							"}",
							"",
							"if (sortType !== \"\" && sortType !== null && sortType !== undefined) {",
							"  url += `&sortType=${sortType}`;",
							"} else {",
							"  url += `&sortType=${randomSortType}`;",
							"}",
							"",
							"if (sortType === '3' && pageNo !== '1') {",
							"  if (cursor !== \"\" && cursor !== null && cursor !== undefined) {",
							"    url += `&cursor=${cursor}`;",
							"  } else {",
							"    url += `&cursor=${defaultCursor}`;",
							"  }",
							"}",
							"",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/new",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"new"
					]
				}
			},
			"response": []
		},
		{
			"name": "给评论点赞",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"data is not empty\", ()=> {",
							"//   // let data = pm.response.json()",
							"//   // pm.expect(data.comments.length).to.be.above(1)",
							"//   // pm.expect(data.total).to.be.above(1)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/like?id=29178366&cid=12840183&t=1&type=0",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"like"
					],
					"query": [
						{
							"key": "id",
							"value": "29178366"
						},
						{
							"key": "cid",
							"value": "12840183"
						},
						{
							"key": "t",
							"value": "1"
						},
						{
							"key": "type",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "抱一抱评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"HugSuccess is true\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.resultMap.isHugSuccess).to.be.eql(true)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/hug/comment?uid=358047007&cid=1167145843&sid=863481066",
					"host": [
						"{{url}}"
					],
					"path": [
						"hug",
						"comment"
					],
					"query": [
						{
							"key": "uid",
							"value": "358047007"
						},
						{
							"key": "cid",
							"value": "1167145843"
						},
						{
							"key": "sid",
							"value": "863481066"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "评论抱一抱列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"hugTotalCounts not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.hugTotalCounts).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let uid = 358047007",
							"let cid = 1167145843",
							"let sid = 863481066",
							"",
							"let page = pm.environment.get('page')",
							"let cursor = pm.environment.get('cursor')",
							"let idCursor = pm.environment.get('idCursor')",
							"let pageSize = pm.environment.get('pageSize')",
							"",
							"let defaultPage = 1",
							"let defaultCursor = -1",
							"let defaultIdCursor = -1",
							"let defaultIdPageSize = 100",
							"",
							"",
							"let url = `http://localhost:3000/comment/hug/list?uid=${uid}&cid=${cid}&sid=${sid}`",
							"",
							"if(page !== \"\" && page !== null && page !== undefined ){",
							"  url += `&page=${page}`",
							"}else{",
							"  url += `&page=${defaultPage}`",
							"}",
							"",
							"if(cursor !== \"\" && cursor !== null && cursor !== undefined ){",
							"  url += `&cursor=${cursor}`",
							"}else{",
							"  url += `&cursor=${defaultCursor}`",
							"}",
							"",
							"if(idCursor !== \"\" && idCursor !== null && idCursor !== undefined ){",
							"  url += `&idCursor=${idCursor}`",
							"}else{",
							"  url += `&idCursor=${defaultIdCursor}`",
							"}",
							"",
							"if(pageSize !== \"\" && pageSize !== null && pageSize !== undefined ){",
							"  url += `&pageSize=${pageSize}`",
							"}else{",
							"  url += `&pageSize=${defaultIdPageSize}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment/hug/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment",
						"hug",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "发送评论(歌曲)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"set environment commentId\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.environment.set('commentId',data.comment.commentId)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment?t=1&type=0&id=258498&content=nice",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "t",
							"value": "1"
						},
						{
							"key": "type",
							"value": "0"
						},
						{
							"key": "id",
							"value": "258498"
						},
						{
							"key": "content",
							"value": "nice"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "删除评论(歌曲)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"hugTotalCounts not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.hugTotalCounts).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comment?t=0&type=0&id=258498&commentId={{commentId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"comment"
					],
					"query": [
						{
							"key": "t",
							"value": "0"
						},
						{
							"key": "type",
							"value": "0"
						},
						{
							"key": "id",
							"value": "258498"
						},
						{
							"key": "commentId",
							"value": "{{commentId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "banner",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"hugTotalCounts not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.hugTotalCounts).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let type = pm.environment.get('type')",
							"",
							"let defaultType = [0,1,2,3]",
							"let romdomType = defaultType[Math.floor(Math.random() * defaultType.length)]",
							"let url = `http://localhost:3000/banner?`",
							"",
							"if(type !== \"\" && type !== null && type !== undefined){",
							"  url += `type=${type}`",
							"}else{",
							"  url += `type=${romdomType}`",
							"}",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/banner",
					"host": [
						"{{url}}"
					],
					"path": [
						"banner"
					]
				}
			},
			"response": []
		},
		{
			"name": "资源点赞( MV)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"hugTotalCounts not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.hugTotalCounts).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/resource/like?t=1&type=1&id=5436712",
					"host": [
						"{{url}}"
					],
					"path": [
						"resource",
						"like"
					],
					"query": [
						{
							"key": "t",
							"value": "1"
						},
						{
							"key": "type",
							"value": "1"
						},
						{
							"key": "id",
							"value": "5436712"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "资源取消点赞( MV)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"hugTotalCounts not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.hugTotalCounts).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/resource/like?t=0&type=1&id=5436712",
					"host": [
						"{{url}}"
					],
					"path": [
						"resource",
						"like"
					],
					"query": [
						{
							"key": "t",
							"value": "0"
						},
						{
							"key": "type",
							"value": "1"
						},
						{
							"key": "id",
							"value": "5436712"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取点赞过的视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"feeds not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.feeds.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/mylike",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"mylike"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取歌曲详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"songs not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.songs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/song/detail?ids=347230,347231",
					"host": [
						"{{url}}"
					],
					"path": [
						"song",
						"detail"
					],
					"query": [
						{
							"key": "ids",
							"value": "347230,347231"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取专辑内容",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"songs not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.songs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album?id=32311",
					"host": [
						"{{url}}"
					],
					"path": [
						"album"
					],
					"query": [
						{
							"key": "id",
							"value": "32311"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "专辑动态信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"commentCount,shareCount,subCount not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.commentCount).to.be.above(0)",
							"  pm.expect(data.shareCount).to.be.above(0)",
							"  pm.expect(data.subCount).to.be.above(0)",
							"",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/detail/dynamic?id=32311",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"detail",
						"dynamic"
					],
					"query": [
						{
							"key": "id",
							"value": "32311"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "收藏专辑",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"commentCount,shareCount,subCount not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.commentCount).to.be.above(0)",
							"//   pm.expect(data.shareCount).to.be.above(0)",
							"//   pm.expect(data.subCount).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/sub?t=1&id=25764",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"sub"
					],
					"query": [
						{
							"key": "t",
							"value": "1"
						},
						{
							"key": "id",
							"value": "25764"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "取消收藏专辑",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"commentCount,shareCount,subCount not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.commentCount).to.be.above(0)",
							"//   pm.expect(data.shareCount).to.be.above(0)",
							"//   pm.expect(data.subCount).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/sub?t=0&id=25764",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"sub"
					],
					"query": [
						{
							"key": "t",
							"value": "0"
						},
						{
							"key": "id",
							"value": "25764"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取已收藏专辑列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"data not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"defaultLimit = 25",
							"defaultOffset = 0",
							"",
							"let url = `http://localhost:3000/album/sublist?`",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=${defaultLimit}`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=${defaultOffset}`)",
							"}",
							"",
							"if (params.length > 0) {",
							"  url += params.join('&')",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/sublist",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"sublist"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取歌手单曲",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"data not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artists?id=6075",
					"host": [
						"{{url}}"
					],
					"path": [
						"artists"
					],
					"query": [
						{
							"key": "id",
							"value": "6075"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取歌手 mv",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"data not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artists/mv?id=6075",
					"host": [
						"{{url}}"
					],
					"path": [
						"artists",
						"mv"
					],
					"query": [
						{
							"key": "id",
							"value": "6075"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取歌手专辑",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"hotAlbums not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.hotAlbums.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 6075",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"defaultLimit = 30",
							"defaultOffset = 0",
							"",
							"let url = `http://localhost:3000/artist/album?id=${id}`",
							"",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  url +=`&limit=${limit}`",
							"}else{",
							"  url +=`&limit=${defaultLimit}`",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  url +=`&offset=${offset}`",
							"}else{",
							" url +=`&offset=${defaultOffset}`",
							"}",
							"",
							"",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/album",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"album"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取歌手描述",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"introduction not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.introduction.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/desc?id=6075",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"desc"
					],
					"query": [
						{
							"key": "id",
							"value": "6075"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取歌手详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"introduction not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.introduction.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/detail?id=6075",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"detail"
					],
					"query": [
						{
							"key": "id",
							"value": "6075"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取相似歌手",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"artists not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.artists.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/simi/artist?id=6075",
					"host": [
						"{{url}}"
					],
					"path": [
						"simi",
						"artist"
					],
					"query": [
						{
							"key": "id",
							"value": "6075"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取相似歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"playlists not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.playlists.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/simi/playlist?id=28302514",
					"host": [
						"{{url}}"
					],
					"path": [
						"simi",
						"playlist"
					],
					"query": [
						{
							"key": "id",
							"value": "28302514"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "相似 mv",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"mvs not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.mvs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/simi/mv?mvid=5436712",
					"host": [
						"{{url}}"
					],
					"path": [
						"simi",
						"mv"
					],
					"query": [
						{
							"key": "mvid",
							"value": "5436712"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取相似音乐",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"songs not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.songs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/simi/song?id=347230",
					"host": [
						"{{url}}"
					],
					"path": [
						"simi",
						"song"
					],
					"query": [
						{
							"key": "id",
							"value": "347230"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取最近 5 个听了这首歌的用户",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"songs not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.songs.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/simi/user?id=347230",
					"host": [
						"{{url}}"
					],
					"path": [
						"simi",
						"user"
					],
					"query": [
						{
							"key": "id",
							"value": "347230"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取每日推荐歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"dailySongs not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.dailySongs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/recommend/songs",
					"host": [
						"{{url}}"
					],
					"path": [
						"recommend",
						"songs"
					]
				}
			},
			"response": []
		},
		{
			"name": "每日推荐歌曲-不感兴趣",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"dailySongs not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.dailySongs.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/recommend/songs/dislike?id=168091",
					"host": [
						"{{url}}"
					],
					"path": [
						"recommend",
						"songs",
						"dislike"
					],
					"query": [
						{
							"key": "id",
							"value": "168091"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取历史日推可用日期列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"dailySongs not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.dates.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/history/recommend/songs",
					"host": [
						"{{url}}"
					],
					"path": [
						"history",
						"recommend",
						"songs"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取历史日推详情数据",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"dailySongs not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.songs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/history/recommend/songs/detail?date=2024-06-17",
					"host": [
						"{{url}}"
					],
					"path": [
						"history",
						"recommend",
						"songs",
						"detail"
					],
					"query": [
						{
							"key": "date",
							"value": "2024-06-17"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "私人 FM",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"pm.test(\"dailySongs not empty\", ()=> {",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/personal_fm",
					"host": [
						"{{url}}"
					],
					"path": [
						"personal_fm"
					]
				}
			},
			"response": []
		},
		{
			"name": "签到",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"// pm.test(\"dailySongs not empty\", ()=> {",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let type = pm.environment.get('type') || 0",
							"let url = `http://localhost:3000/daily_signin?type=${type}`",
							"",
							"pm.request.url = url",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/daily_signin",
					"host": [
						"{{url}}"
					],
					"path": [
						"daily_signin"
					]
				}
			},
			"response": []
		},
		{
			"name": "乐签信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Response contains valid info object\", () => {",
							"    let data = pm.response.json();",
							"    ",
							"    // 确保 info 对象存在",
							"    pm.expect(data).to.have.property('data');",
							"    pm.expect(data.data).to.have.property('info');",
							"    ",
							"    let info = data.data.info;",
							"    ",
							"    // 确保 info 对象的某些关键属性存在且有效",
							"    pm.expect(info).to.have.property('id').that.is.a('number');",
							"    pm.expect(info).to.have.property('type').that.is.a('number');",
							"    pm.expect(info).to.have.property('startTime').that.is.a('number');",
							"    pm.expect(info).to.have.property('endTime').that.is.a('number');",
							"    pm.expect(info).to.have.property('picUrl').that.is.a('string');",
							"    pm.expect(info).to.have.property('newPicUrl').that.is.a('string');",
							"    pm.expect(info).to.have.property('mainText').that.is.a('string');",
							"    pm.expect(info).to.have.property('author').that.is.a('string');",
							"    ",
							"    // 进一步验证其他属性",
							"    pm.expect(info).to.have.property('resourceName').that.is.a('string');",
							"    pm.expect(info).to.have.property('resourceAuthor').that.is.a('string');",
							"    pm.expect(info).to.have.property('resourceUrl').that.is.a('string');",
							"    pm.expect(info).to.have.property('resourceCover').that.is.a('string');",
							"    ",
							"    // 检查 hotComments 是否存在并且是一个数组",
							"    pm.expect(info).to.have.property('hotComments').that.is.an('array');",
							"    pm.expect(info.hotComments.length).to.be.above(0);",
							"    ",
							"    // 确保 hotComments 中的每个对象都有 content 和 authorName",
							"    info.hotComments.forEach(comment => {",
							"        pm.expect(comment).to.have.property('content').that.is.a('string');",
							"        pm.expect(comment).to.have.property('authorName').that.is.a('string');",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/sign/happy/info",
					"host": [
						"{{url}}"
					],
					"path": [
						"sign",
						"happy",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"name": "喜欢音乐",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let like = pm.environment.get('like') || 0",
							"let id = 347230",
							"let url = `http://localhost:3000/like?id=${id}&like=${like}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/like?id=347230",
					"host": [
						"{{url}}"
					],
					"path": [
						"like"
					],
					"query": [
						{
							"key": "id",
							"value": "347230"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "喜欢音乐列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"ids is array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.ids.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/likelist?uid={{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"likelist"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "垃圾桶",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"ids is array\",()=>{",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.ids.length).to.be(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/fm_trash?id=347230",
					"host": [
						"{{url}}"
					],
					"path": [
						"fm_trash"
					],
					"query": [
						{
							"key": "id",
							"value": "347230"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "新碟上架",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"weekData is array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.weekData.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let year = pm.environment.get('year');",
							"let month = pm.environment.get('month');",
							"let limit = pm.environment.get('limit');",
							"let offset = pm.environment.get('offset');",
							"",
							"let params = [];",
							"",
							"// 仅在环境变量中有值时添加参数到数组中",
							"if (year !== undefined && year !== null && year !== \"\") {",
							"    params.push(`year=${year}`)",
							"}else{",
							"  params.push(`year=2024`)",
							"}",
							"if (month !== undefined && month !== null && month !== \"\") {",
							"    params.push(`month=${month}`)",
							"}else{",
							"  params.push(`month=6`)",
							"}",
							"if (limit !== undefined && limit !== null && limit !== \"\") {",
							"    params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"if (offset !== undefined && offset !== null && offset !== \"\") {",
							"    params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"",
							"",
							"let url = `http://localhost:3000/top/album?${params.join('&')}`;",
							"",
							"pm.request.url = url;",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/top/album",
					"host": [
						"{{url}}"
					],
					"path": [
						"top",
						"album"
					]
				}
			},
			"response": []
		},
		{
			"name": "全部新碟",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"albums is array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.albums.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let area = pm.environment.get('area')",
							"defaultArea = ['ALL','ZH','EA','KR','JP']",
							"let romdomArea = defaultArea[Math.floor(Math.random() * defaultArea.length)]",
							"",
							"let params = []",
							"",
							"// 仅在环境变量中有值时添加参数到数组中",
							"",
							"if (area !== undefined && area !== null && area !== \"\") {",
							"    params.push(`area=${area}`)",
							"} else {",
							"    params.push(`area=${romdomArea}`)",
							"}",
							"",
							"if (limit !== undefined && limit !== null && limit !== \"\") {",
							"    params.push(`limit=${limit}`)",
							"} else {",
							"    params.push(`limit=30`)",
							"}",
							"",
							"if (offset !== undefined && offset !== null && offset !== \"\") {",
							"    params.push(`offset=${offset}`)",
							"} else {",
							"    params.push(`offset=0`)",
							"}",
							"",
							"",
							"",
							"let url = `http://localhost:3000/album/new?${params.join('&')}`",
							"",
							"pm.request.url = url",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/new",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"new"
					]
				}
			},
			"response": []
		},
		{
			"name": "最新专辑",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"albums is array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.albums.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/newest",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"newest"
					]
				}
			},
			"response": []
		},
		{
			"name": "听歌打卡",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Check if data is 'success'\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.be.equal('success')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 518066366",
							"let sourceid = 36780169",
							"let time = pm.environment.get('time')",
							"defaultTime = 291",
							"",
							"let url = `http://localhost:3000/scrobble?id=${id}&sourceid=${sourceid}`",
							"",
							"if(time !== \"\" && time !== null &&time !== undefined ){",
							"  url += `&time=${time}`",
							"}else{",
							"  url += `&time=${defaultTime}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/scrobble",
					"host": [
						"{{url}}"
					],
					"path": [
						"scrobble"
					]
				}
			},
			"response": []
		},
		{
			"name": "热门歌手",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Check if data is 'success'\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.artists.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"",
							"let parmas = []",
							"if(limit !== \"\" && limit !== null &&limit !== undefined ){",
							"  parmas.push(`limit=${limit}`)",
							"}else{",
							" parmas.push(`limit=50`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null &&offset !== undefined ){",
							"  parmas.push(`offset=${offset}`)",
							"}else{",
							"  parmas.push(`offset=0`)",
							"}",
							"let url = `http://localhost:3000/top/artists?${parmas.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/top/artists",
					"host": [
						"{{url}}"
					],
					"path": [
						"top",
						"artists"
					]
				}
			},
			"response": []
		},
		{
			"name": "全部 mv",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"data is Array\",()=>{",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"let type = pm.environment.get('type')",
							"let area = pm.environment.get('area')",
							"let order = pm.environment.get('order')",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let defaultArea = ['内地','港台','欧美','日本','韩国','全部']",
							"let defaultType = ['全部','官方版','原生','现场版','网易出品']",
							"let defaultOrder = ['最热','最新']",
							"let getRomdomValue = array =>array[Math.floor(Math.random() * array.length)]",
							"",
							"let parmas = []",
							"",
							"if(area !== \"\" && area !== null &&area !== undefined ){",
							" parmas.push(`area=${area}`)",
							"}else{",
							"  parmas.push(`area=${getRomdomValue(defaultArea)}`)",
							"}",
							"if(type !== \"\" && type !== null &&type !== undefined ){",
							" parmas.push(`type=${type}`)",
							"}else{",
							"  parmas.push(`type=${getRomdomValue(defaultType)}`)",
							"}",
							"if(order !== \"\" && order !== null &&order !== undefined ){",
							" parmas.push(`order=${order}`)",
							"}else{",
							"  parmas.push(`order=${getRomdomValue(defaultOrder)}`)",
							"}",
							"",
							"if(limit !== \"\" && limit !== null &&limit !== undefined ){",
							" parmas.push(`limit=${limit}`)",
							"}else{",
							" parmas.push(`limit=30`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null &&offset !== undefined ){",
							" parmas.push(`offset=${offset}`)",
							"}else{",
							" parmas.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/mv/all?${parmas.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mv/all",
					"host": [
						"{{url}}"
					],
					"path": [
						"mv",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "最新 mv",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"data is Array\",()=>{",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"let area = pm.environment.get('area')",
							"let limit = pm.environment.get('limit')",
							"",
							"let defaultArea = ['全部','内地','港台','欧美','日本','韩国']",
							"let getRomdomValue = (array)=>array[Math.floor(Math.random()* array.length)]",
							"",
							"",
							"let parmas = []",
							"",
							"if(area !== \"\" && area !== null &&area !== undefined ){",
							" parmas.push(`area=${area}`)",
							"}else{",
							"  parmas.push(`area=${getRomdomValue(defaultArea)}`)",
							"}",
							"",
							"",
							"if(limit !== \"\" && limit !== null &&limit !== undefined ){",
							" parmas.push(`limit=${limit}`)",
							"}else{",
							" parmas.push(`limit=30`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/mv/first?${parmas.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mv/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"mv",
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "网易出品 mv",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data is Array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let parmas = []",
							"",
							"if(limit !== \"\" && limit !== null &&limit !== undefined ){",
							" parmas.push(`limit=${limit}`)",
							"}else{",
							" parmas.push(`limit=30`)",
							"}",
							"if(offset !== \"\" && offset !== null &&offset !== undefined ){",
							" parmas.push(`offset=${offset}`)",
							"}else{",
							" parmas.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/mv/exclusive/rcmd?${parmas.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mv/exclusive/rcmd",
					"host": [
						"{{url}}"
					],
					"path": [
						"mv",
						"exclusive",
						"rcmd"
					]
				}
			},
			"response": []
		},
		{
			"name": "推荐 mv",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"result is Array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.result.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/personalized/mv",
					"host": [
						"{{url}}"
					],
					"path": [
						"personalized",
						"mv"
					]
				}
			},
			"response": []
		},
		{
			"name": "推荐歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"result is Array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.result.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit =pm.environment.get('limit')",
							"",
							"let url = `http://localhost:3000/personalized?`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  url += `limit=${limit}`",
							"}else{",
							"  url += `limit=30`",
							"}",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/personalized",
					"host": [
						"{{url}}"
					],
					"path": [
						"personalized"
					]
				}
			},
			"response": []
		},
		{
			"name": "推荐新音乐",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"result is Array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.result.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit =pm.environment.get('limit')",
							"",
							"let url = `http://localhost:3000/personalized/newsong?`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  url += `limit=${limit}`",
							"}else{",
							"  url += `limit=10`",
							"}",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/personalized/newsong",
					"host": [
						"{{url}}"
					],
					"path": [
						"personalized",
						"newsong"
					]
				}
			},
			"response": []
		},
		{
			"name": "推荐电台",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"result is Array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.result.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/personalized/djprogram",
					"host": [
						"{{url}}"
					],
					"path": [
						"personalized",
						"djprogram"
					]
				}
			},
			"response": []
		},
		{
			"name": "推荐节目",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"programs is Array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.programs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let parmas = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  parmas.push(`limit=${limit}`)",
							"}else{",
							"  parmas.push(`limit=10`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  parmas.push(`offset=${offset}`)",
							"}else{",
							"  parmas.push(`offset=0`)",
							"}",
							"let url = `http://localhost:3000/program/recommend?${parmas.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/program/recommend",
					"host": [
						"{{url}}"
					],
					"path": [
						"program",
						"recommend"
					]
				}
			},
			"response": []
		},
		{
			"name": "独家放送(入口列表)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"result is Array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.result.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/personalized/privatecontent",
					"host": [
						"{{url}}"
					],
					"path": [
						"personalized",
						"privatecontent"
					]
				}
			},
			"response": []
		},
		{
			"name": "独家放送列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"result is Array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.result.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let parmas = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  parmas.push(`limit=${limit}`)",
							"}else{",
							"  parmas.push(`limit=60`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  parmas.push(`offset=${offset}`)",
							"}else{",
							"  parmas.push(`offset=0`)",
							"}",
							"let url = `http://localhost:3000/personalized/privatecontent/list?${parmas.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/personalized/privatecontent/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"personalized",
						"privatecontent",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "mv 排行",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"data is Array\",()=>{",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let area = pm.environment.get('area')",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let defaultArea = ['内地','港台','欧美','日本','韩国','全部']",
							"let getRomdomValue = array => array[Math.floor(Math.random() * array.length)]",
							"",
							"let parmas = []",
							"if(area !== \"\" && area !== null && area !== undefined){",
							"  parmas.push(`area=${area}`)",
							"}else{",
							"  parmas.push(`area=${getRomdomValue(defaultArea)}`)",
							"}",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  parmas.push(`limit=${limit}`)",
							"}else{",
							"  parmas.push(`limit=30`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  parmas.push(`offset=${offset}`)",
							"}else{",
							"  parmas.push(`offset=0`)",
							"}",
							"let url = `http://localhost:3000/top/mv?${parmas.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/top/mv",
					"host": [
						"{{url}}"
					],
					"path": [
						"top",
						"mv"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取 mv 数据",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mv/detail?mvid=5436712",
					"host": [
						"{{url}}"
					],
					"path": [
						"mv",
						"detail"
					],
					"query": [
						{
							"key": "mvid",
							"value": "5436712"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取 mv 点赞转发评论数数据",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mv/detail/info?mvid=5436712",
					"host": [
						"{{url}}"
					],
					"path": [
						"mv",
						"detail",
						"info"
					],
					"query": [
						{
							"key": "mvid",
							"value": "5436712"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "mv 地址",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.url).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 5436712",
							"let r =  pm.environment.get('r')",
							"",
							"let url = `http://localhost:3000/mv/url?id=${id}`",
							"",
							"if(r !== \"\" && r !== null && r !== undefined){",
							"  url += `&r=${r}`",
							"}else{",
							"  url += `&r=1080`",
							"}",
							"",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mv/url",
					"host": [
						"{{url}}"
					],
					"path": [
						"mv",
						"url"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取视频标签列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/video/group/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"video",
						"group",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取视频分类列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/video/category/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"video",
						"category",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取视频标签/分类下的视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"datas is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.datas.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 9104",
							"let offset = pm.environment.get('offset')",
							"",
							"let url = `http://localhost:3000/video/group?id=${id}`",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  url += `&offset=${limit}`",
							"}else{",
							"  url += `&offset=0`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/video/group",
					"host": [
						"{{url}}"
					],
					"path": [
						"video",
						"group"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取全部视频列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"datas is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.datas.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let offset = pm.environment.get('offset')",
							"",
							"let url = `http://localhost:3000/video/timeline/all?`",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  url += `offset=${limit}`",
							"}else{",
							"  url += `offset=0`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/video/timeline/all",
					"host": [
						"{{url}}"
					],
					"path": [
						"video",
						"timeline",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取推荐视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"datas is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.datas.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let offset = pm.environment.get('offset')",
							"",
							"let url = `http://localhost:3000/video/timeline/recommend?`",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  url += `offset=${limit}`",
							"}else{",
							"  url += `offset=0`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/video/timeline/recommend",
					"host": [
						"{{url}}"
					],
					"path": [
						"video",
						"timeline",
						"recommend"
					]
				}
			},
			"response": []
		},
		{
			"name": "相关视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"datas is array\",()=>{",
							"//   let data = pm.response.json()",
							"//       pm.expect(data.datas.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/related/allvideo?id=0C2DB8DA23525952D0E86AE3DF6F5429",
					"host": [
						"{{url}}"
					],
					"path": [
						"related",
						"allvideo"
					],
					"query": [
						{
							"key": "id",
							"value": "0C2DB8DA23525952D0E86AE3DF6F5429"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "视频详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"vid not empty\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.vid).to.be.equal('0C2DB8DA23525952D0E86AE3DF6F5429')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/video/detail?id=0C2DB8DA23525952D0E86AE3DF6F5429",
					"host": [
						"{{url}}"
					],
					"path": [
						"video",
						"detail"
					],
					"query": [
						{
							"key": "id",
							"value": "0C2DB8DA23525952D0E86AE3DF6F5429"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取视频点赞转发评论数数据",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"vid not empty\",()=>{",
							"//   let data = pm.response.json()",
							"//       pm.expect(data.data.vid).to.be.equal('0C2DB8DA23525952D0E86AE3DF6F5429')",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/video/detail/info?vid=0C2DB8DA23525952D0E86AE3DF6F5429",
					"host": [
						"{{url}}"
					],
					"path": [
						"video",
						"detail",
						"info"
					],
					"query": [
						{
							"key": "vid",
							"value": "0C2DB8DA23525952D0E86AE3DF6F5429"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取视频播放地址",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"id not empty\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.urls[0].id).to.be.equal('0C2DB8DA23525952D0E86AE3DF6F5429')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/video/url?id=0C2DB8DA23525952D0E86AE3DF6F5429",
					"host": [
						"{{url}}"
					],
					"path": [
						"video",
						"url"
					],
					"query": [
						{
							"key": "id",
							"value": "0C2DB8DA23525952D0E86AE3DF6F5429"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "所有榜单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"list is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.list.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/toplist",
					"host": [
						"{{url}}"
					],
					"path": [
						"toplist"
					]
				}
			},
			"response": []
		},
		{
			"name": "所有榜单内容摘要",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"list is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.list.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/toplist/detail",
					"host": [
						"{{url}}"
					],
					"path": [
						"toplist",
						"detail"
					]
				}
			},
			"response": []
		},
		{
			"name": "歌手榜",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"artists is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.list.artists.length).to.be.above(0)",
							"})",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let type =pm.environment.get('type')",
							"",
							"let defaultType = [1,2,3,4]",
							"",
							"let getRomdomValue = array => array[Math.floor(Math.random() * array.length)]",
							"",
							"let url = `http://localhost:3000/toplist/artist?`",
							"",
							"if(type !== \"\" && type !== null && type !== undefined){",
							"  url += `type=${type}`",
							"}else{",
							"  url += `type=${getRomdomValue(defaultType)}`",
							"}",
							"pm.request.url = url",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/toplist/artist",
					"host": [
						"{{url}}"
					],
					"path": [
						"toplist",
						"artist"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 banner",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/banner",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"banner"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台个性推荐",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"",
							"let url = `http://localhost:3000/dj/personalize/recommend?`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  url += `&limit=${limit}`",
							"}else{",
							"  url += `&limit=6`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/personalize/recommend",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"personalize",
						"recommend"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台订阅者列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"subscribers is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.subscribers.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 335425050",
							"let limit = pm.environment.get('limit')",
							"let time = pm.environment.get('time')",
							"",
							"let url = `http://localhost:3000/dj/subscriber?id=${id}`",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  url += `&limit=${limit}`",
							"}else{",
							"  url += `&limit=20`",
							"}",
							"",
							"if(time !== \"\" && time !== null && time !== undefined){",
							"  url += `&time=${time}`",
							"}else{",
							"  url += `&time=${Date.now()}`",
							"}",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/subscriber",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"subscriber"
					]
				}
			},
			"response": []
		},
		{
			"name": "用户电台",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"subscribers is array\",()=>{",
							"//   let data = pm.response.json()",
							"//       pm.expect(data.subscribers.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user/audio?uid={{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"audio"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "热门电台",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"djRadios is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.djRadios.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"if(offset !== \"\" && offset !==null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/dj/hot?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/hot",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"hot"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 节目榜",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"toplist is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.toplist.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"if(offset !== \"\" && offset !==null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/dj/program/toplist?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/program/toplist",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"program",
						"toplist"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 付费精品",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"list is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.list.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"",
							"let url = `http://localhost:3000/dj/toplist/pay?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/toplist/pay",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"toplist",
						"pay"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 24 小时节目榜",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"list is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.list.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"",
							"let url = `http://localhost:3000/dj/program/toplist/hours?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/program/toplist/hours",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"program",
						"toplist",
						"hours"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 24 小时主播榜",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"list is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.list.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"",
							"let url = `http://localhost:3000/dj/toplist/hours?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/toplist/hours",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"toplist",
						"hours"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 主播新人榜",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"list is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.list.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"",
							"let url = `http://localhost:3000/dj/toplist/newcomer?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/toplist/newcomer",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"toplist",
						"newcomer"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 最热主播榜",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"list is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.list.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"",
							"let url = `http://localhost:3000/dj/toplist/popular?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/toplist/popular",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"toplist",
						"popular"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 新晋电台榜/热门电台榜",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"toplist is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.toplist.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let type = pm.environment.get('type')",
							"",
							"defaultType = ['new','hot']",
							"getRomdomValue = array => array[Math.floor(Math.random() * array.length)]",
							"",
							"let params = []",
							"",
							"if(type !== \"\" && type !==null && type !== undefined){",
							"  params.push(`type=${type}`)",
							"}else{",
							"  params.push(`type=${getRomdomValue(defaultType)}`)",
							"}",
							"",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"",
							"if(offset !== \"\" && offset !==null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/dj/toplist?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/toplist",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"toplist"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 类别热门电台",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"djRadios is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.djRadios.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let cateId = pm.environment.get('cateId')",
							"",
							"defaultCateId = [2,3,5,6,8,11,13,14,2001,3001,10001,10002]",
							"getRomdomValue = array => array[Math.floor(Math.random() * array.length)]",
							"",
							"let params = []",
							"",
							"if(cateId !== \"\" && cateId !==null && cateId !== undefined){",
							"  params.push(`cateId=${cateId}`)",
							"}else{",
							"  params.push(`cateId=${getRomdomValue(defaultCateId)}`)",
							"}",
							"",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"",
							"if(offset !== \"\" && offset !==null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/dj/radio/hot?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/radio/hot",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"radio",
						"hot"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 推荐",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"djRadios is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.djRadios.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/recommend",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"recommend"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 分类",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"categories is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.categories.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/catelist",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"catelist"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 分类推荐",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"djRadios is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.djRadios.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let type = pm.environment.get('type')",
							"",
							"let defaultType = [2,3,6,8,11,13,14,2001,3001,10001,10002,3080097,3080098,3081098,3083097,3087096,3088097,3088098,3148096]",
							"",
							"let getRomdomValue = array => array[Math.floor(Math.random() * array.length)]",
							"",
							"let params = []",
							"",
							"if(type !==\"\" && type !==null && type !== undefined){",
							"  params.push(`type=${type}`)",
							"}else{",
							"  params.push(`type=${getRomdomValue(defaultType)}`)",
							"}",
							"let url = `http://localhost:3000/dj/recommend/type?${params.join('&')}`",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/recommend/type",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"recommend",
						"type"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 订阅",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"djRadios is array\",()=>{",
							"//   let data = pm.response.json()",
							"//       pm.expect(data.djRadios.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/sub?rid=336355127&t=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"sub"
					],
					"query": [
						{
							"key": "rid",
							"value": "336355127"
						},
						{
							"key": "t",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "电台的订阅列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"djRadios is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.djRadios.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/sublist",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"sublist"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 付费精选",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"list is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.list.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('lioffsetmit')",
							"",
							"",
							"",
							"let params = []",
							"",
							"if(limit !==\"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"",
							"if(offset !==\"\" && offset !==null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/dj/paygift?${params.join('&')}`",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/paygift",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"paygift"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 非热门类型",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/category/excludehot",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"category",
						"excludehot"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 推荐类型",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/category/recommend",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"category",
						"recommend"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 今日优选",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/today/perfered",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"today",
						"perfered"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/detail?rid=336355127",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"detail"
					],
					"query": [
						{
							"key": "rid",
							"value": "336355127"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 节目",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let rid = 336355127",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let asc = pm.environment.get('asc')",
							"",
							"let params = []",
							"",
							"if(asc !== \"\" && asc !==null && asc !== undefined){",
							"  params.push(`asc=${asc}`)",
							"}else{",
							"  params.push(`asc=false`)",
							"}",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"if(offset !== \"\" && offset !==null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/dj/detail?rid=${rid}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/detail",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"detail"
					]
				}
			},
			"response": []
		},
		{
			"name": "电台 - 节目详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"program not empty\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.program).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/dj/program/detail?id=1367665101",
					"host": [
						"{{url}}"
					],
					"path": [
						"dj",
						"program",
						"detail"
					],
					"query": [
						{
							"key": "id",
							"value": "1367665101"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "通知 - 私信",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"msgs is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.msgs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !==null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"if(offset !== \"\" && offset !==null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/msg/private?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/msg/private",
					"host": [
						"{{url}}"
					],
					"path": [
						"msg",
						"private"
					]
				}
			},
			"response": []
		},
		{
			"name": "发送私信",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"newMsgs is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.newMsgs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/send/text?user_ids=1&msg=nice",
					"host": [
						"{{url}}"
					],
					"path": [
						"send",
						"text"
					],
					"query": [
						{
							"key": "user_ids",
							"value": "1"
						},
						{
							"key": "msg",
							"value": "nice"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "发送私信(带歌曲)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"newMsgs is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.newMsgs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/send/song?user_ids=1&msg=nice&id=1893266013",
					"host": [
						"{{url}}"
					],
					"path": [
						"send",
						"song"
					],
					"query": [
						{
							"key": "user_ids",
							"value": "1"
						},
						{
							"key": "msg",
							"value": "nice"
						},
						{
							"key": "id",
							"value": "1893266013"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "发送私信(带专辑)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"newMsgs is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.newMsgs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/send/album?user_ids=9003&msg=nice&id=135828162",
					"host": [
						"{{url}}"
					],
					"path": [
						"send",
						"album"
					],
					"query": [
						{
							"key": "user_ids",
							"value": "9003"
						},
						{
							"key": "msg",
							"value": "nice"
						},
						{
							"key": "id",
							"value": "135828162"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "发送私信(带歌单)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"newMsgs is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.newMsgs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/send/playlist?user_ids=9003&msg=nice&playlist=705123491",
					"host": [
						"{{url}}"
					],
					"path": [
						"send",
						"playlist"
					],
					"query": [
						{
							"key": "user_ids",
							"value": "9003"
						},
						{
							"key": "msg",
							"value": "nice"
						},
						{
							"key": "playlist",
							"value": "705123491"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "最近联系人",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"follow is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.data.follow.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/msg/recentcontact",
					"host": [
						"{{url}}"
					],
					"path": [
						"msg",
						"recentcontact"
					]
				}
			},
			"response": []
		},
		{
			"name": "私信内容",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"msgs is array\",()=>{",
							"  let data = pm.response.json()",
							"      pm.expect(data.msgs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let before = pm.environment.get('before')",
							"let defaultBefore = Date.now()",
							"let uid = 9003",
							"",
							"let params = []",
							"",
							"if(before !==\"\" && before !== null && before !== undefined){",
							"  params.push(`before=${limit}`)",
							"}else{",
							"  params.push(`before=${defaultBefore}`)",
							"}",
							"",
							"if(limit !==\"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/msg/private/history?uid=${uid}&${params.join('&')}`",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/msg/private/history",
					"host": [
						"{{url}}"
					],
					"path": [
						"msg",
						"private",
						"history"
					]
				}
			},
			"response": []
		},
		{
			"name": "通知 - 评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"msgs is array\",()=>{",
							"//   let data = pm.response.json()",
							"//       pm.expect(data.msgs.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let before = pm.environment.get('before')",
							"let defaultBefore = Date.now()",
							"let uid = 358047007",
							"",
							"let params = []",
							"",
							"if(before !==\"\" && before !== null && before !== undefined){",
							"  params.push(`before=${limit}`)",
							"}else{",
							"  params.push(`before=${defaultBefore}`)",
							"}",
							"",
							"if(limit !==\"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/msg/comments?uid=${uid}&${params.join('&')}`",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/msg/comments",
					"host": [
						"{{url}}"
					],
					"path": [
						"msg",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "通知 - @我",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"msgs is array\",()=>{",
							"//   let data = pm.response.json()",
							"//       pm.expect(data.msgs.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let params = []",
							"",
							"if(limit !==\"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"",
							"if(offset !==\"\" && offset !== null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/msg/forwards?${params.join('&')}`",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/msg/forwards",
					"host": [
						"{{url}}"
					],
					"path": [
						"msg",
						"forwards"
					]
				}
			},
			"response": []
		},
		{
			"name": "通知 - 通知",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"msgs is array\",()=>{",
							"//   let data = pm.response.json()",
							"//       pm.expect(data.msgs.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let lasttime = pm.environment.get('lasttime')",
							"let defaultLastTime = Date.now()",
							"",
							"let params = []",
							"",
							"if(limit !==\"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"",
							"if(lasttime !==\"\" && lasttime !== null && lasttime !== undefined){",
							"  params.push(`lasttime=${lasttime}`)",
							"}else{",
							"  params.push(`lasttime=${defaultLastTime}`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/msg/notices?${params.join('&')}`",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/msg/notices",
					"host": [
						"{{url}}"
					],
					"path": [
						"msg",
						"notices"
					]
				}
			},
			"response": []
		},
		{
			"name": "设置",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"setting is object\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.setting).to.be.an('object')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/setting",
					"host": [
						"{{url}}"
					],
					"path": [
						"setting"
					]
				}
			},
			"response": []
		},
		{
			"name": "数字专辑-新碟上架",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"products is array\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.products.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !==null && limit !==undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"",
							"if(offset !== \"\" && offset !==null && offset !==undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/album/list?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "数字专辑&数字单曲-榜单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"products is array\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.products.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let type = pm.environment.get('offtypeset')",
							"let albumType = pm.environment.get('albumType')",
							"",
							"let defaultType = ['daily',\"week\",'year','total']",
							"let defaultAlbumType = [0,1]",
							"let getRomdomValue = array => array[Math.floor(Math.random() * array.length)]",
							"",
							"let params = []",
							"",
							"if(albumType !== \"\" && albumType !==null && albumType !==undefined){",
							"  params.push(`albumType=${albumType}`)",
							"}else{",
							"  params.push(`albumType=${getRomdomValue(defaultAlbumType)}`)",
							"}",
							"",
							"if(type !== \"\" && type !==null && type !==undefined){",
							"  params.push(`type=${type}`)",
							"}else{",
							"  params.push(`type=${getRomdomValue(defaultType)}`)",
							"}",
							"",
							"if(limit !== \"\" && limit !==null && limit !==undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"",
							"if(offset !== \"\" && offset !==null && offset !==undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/album/songsaleboard?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/songsaleboard",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"songsaleboard"
					]
				}
			},
			"response": []
		},
		{
			"name": "数字专辑-语种风格馆",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"albumProducts is array\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.albumProducts.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let area = pm.environment.get('area')",
							"",
							"let defaultArea  = ['Z_H','E_A','KR','JP']",
							"getRomdomValue = array => array[Math.floor(Math.random() * array.length)]",
							"",
							"let params = []",
							"",
							"if(area !== \"\" && area !==null && area !==undefined){",
							"  params.push(`area=${area}`)",
							"}else{",
							"  params.push(`area=${getRomdomValue(defaultArea)}`)",
							"}",
							"",
							"if(limit !== \"\" && limit !==null && limit !==undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=30`)",
							"}",
							"",
							"if(offset !== \"\" && offset !==null && offset !==undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/album/list/style?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/list/style",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"list",
						"style"
					]
				}
			},
			"response": []
		},
		{
			"name": "数字专辑详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"albumId is 84547195\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.album.albumId).to.be.equal(84547195)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/detail?id=84547195",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"detail"
					],
					"query": [
						{
							"key": "id",
							"value": "84547195"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "我的数字专辑",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"albumId is 84547195\",()=>{",
							"//   let data = pm.response.json()",
							"//     pm.expect(data.album.albumId).to.be.equal(84547195)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/digitalAlbum/purchased",
					"host": [
						"{{url}}"
					],
					"path": [
						"digitalAlbum",
						"purchased"
					]
				}
			},
			"response": []
		},
		{
			"name": "音乐日历",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/calendar",
					"host": [
						"{{url}}"
					],
					"path": [
						"calendar"
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"data not empty\",()=>{",
							"//   let data = pm.response.json()",
							"//     pm.expect(data.data).to.not.be.empty",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei"
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝今日签到信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"data not empty\",()=>{",
							"//   let data = pm.response.json()",
							"//     pm.expect(data.data).to.not.be.empty",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei/today",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei",
						"today"
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝签到",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei/sign",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei",
						"sign"
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝账户信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.userPoint.userId).to.be.equal(358047007)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei/info",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝所有任务",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is success\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('SUCCESS')",
							"    pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei/tasks",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝 todo 任务",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is success\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('SUCCESS')",
							"    pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei/tasks/todo",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei",
						"tasks",
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝完成任务",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is success\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('SUCCESS')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei/task/finish?userTaskId=215397361212&depositCode=1270",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei",
						"task",
						"finish"
					],
					"query": [
						{
							"key": "userTaskId",
							"value": "215397361212"
						},
						{
							"key": "depositCode",
							"value": "1270"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝收入",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is success\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('SUCCESS')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=10`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/yunbei/tasks/receipt?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei/tasks/receipt",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei",
						"tasks",
						"receipt"
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝支出",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is success\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('SUCCESS')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=10`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/yunbei/tasks/expense?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei/tasks/expense",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei",
						"tasks",
						"expense"
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝推歌",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Status code is 200\", ()=> {",
							"//   pm.response.to.have.status(200)",
							"// })",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.code).to.be.equal(400)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let reason = pm.environment.get('reason')",
							"let yunbeiNum = pm.environment.get('yunbeiNum')",
							"let id = 65528",
							"",
							"let params = []",
							"",
							"if(reason !== \"\" && reason !== null && reason !== undefined){",
							"  params.push(`reason=${reason}`)",
							"}else{",
							"  params.push(`reason=nice`)",
							"}",
							"",
							"if(yunbeiNum !== \"\" && yunbeiNum !== null && yunbeiNum !== undefined){",
							"  params.push(`yunbeiNum=${yunbeiNum}`)",
							"}else{",
							"  params.push(`yunbeiNum=10`)",
							"}",
							"",
							"let url = `http://localhost:3000/yunbei/rcmd/song?id=${id}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei/rcmd/song",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei",
						"rcmd",
						"song"
					]
				}
			},
			"response": []
		},
		{
			"name": "云贝推歌历史记录",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"data not empty\",()=>{",
							"//   let data = pm.response.json()",
							"//     pm.expect(data.code).to.be.equal(400)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let size = pm.environment.get('size')",
							"",
							"let params = []",
							"",
							"if(size !== \"\" && size !== null && size !== undefined){",
							"  params.push(`size=${size}`)",
							"}else{",
							"  params.push(`size=20`)",
							"}",
							"",
							"let url = `http://localhost:3000/yunbei/rcmd/song/history?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/yunbei/rcmd/song/history",
					"host": [
						"{{url}}"
					],
					"path": [
						"yunbei",
						"rcmd",
						"song",
						"history"
					]
				}
			},
			"response": []
		},
		{
			"name": "关注歌手新歌",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let before = pm.environment.get('before')",
							"",
							"let defaultBefore = Date.now()",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=20`)",
							"}",
							"",
							"if(before !== \"\" && before !== null && before !== undefined){",
							"  params.push(`before=${before}`)",
							"}else{",
							"  params.push(`before=${defaultBefore}`)",
							"}",
							"",
							"let url = `http://localhost:3000/artist/new/song?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/new/song",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"new",
						"song"
					]
				}
			},
			"response": []
		},
		{
			"name": "关注歌手新 MV",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.data.newWorks.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let before = pm.environment.get('before')",
							"",
							"let defaultBefore = Date.now()",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=20`)",
							"}",
							"",
							"if(before !== \"\" && before !== null && before !== undefined){",
							"  params.push(`before=${before}`)",
							"}else{",
							"  params.push(`before=${defaultBefore}`)",
							"}",
							"",
							"let url = `http://localhost:3000/artist/new/mv?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/new/mv",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"new",
						"mv"
					]
				}
			},
			"response": []
		},
		{
			"name": "已购单曲",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"data not empty\",()=>{",
							"//   let data = pm.response.json()",
							"//     pm.expect(data.data.newWorks.length).to.be.above(0)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=20`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/song/purchased?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/song/purchased",
					"host": [
						"{{url}}"
					],
					"path": [
						"song",
						"purchased"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取 mlog 播放地址",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message not empty\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('ok')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let res = pm.environment.get('res')",
							"let id = `a1qOVPTWKS1ZrK8`",
							"",
							"let params = []",
							"",
							"if(res !== \"\" && res !== null && res !== undefined){",
							"  params.push(`res=${res}`)",
							"}else{",
							"  params.push(`res=1080`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/mlog/url?id=${id}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mlog/url",
					"host": [
						"{{url}}"
					],
					"path": [
						"mlog",
						"url"
					]
				}
			},
			"response": []
		},
		{
			"name": "将 mlog id 转为视频 id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message not empty\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('ok')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mlog/to/video?id=a1qOVPTWKS1ZrK8",
					"host": [
						"{{url}}"
					],
					"path": [
						"mlog",
						"to",
						"video"
					],
					"query": [
						{
							"key": "id",
							"value": "a1qOVPTWKS1ZrK8"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "vip 成长值",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is success\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('success')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/vip/growthpoint",
					"host": [
						"{{url}}"
					],
					"path": [
						"vip",
						"growthpoint"
					]
				}
			},
			"response": []
		},
		{
			"name": "vip 成长值获取记录",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is success\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('success')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=20`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=20`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/vip/growthpoint/details?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/vip/growthpoint/details",
					"host": [
						"{{url}}"
					],
					"path": [
						"vip",
						"growthpoint",
						"details"
					]
				}
			},
			"response": []
		},
		{
			"name": "vip 任务",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is success\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('success')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/vip/tasks",
					"host": [
						"{{url}}"
					],
					"path": [
						"vip",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取 VIP 信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is 成功\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('成功')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/vip/info?uid={{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"vip",
						"info"
					],
					"query": [
						{
							"key": "uid",
							"value": "{{uid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "领取 vip 成长值",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Status code is 200\", ()=> {",
							"//   pm.response.to.have.status(200)",
							"// })",
							"",
							"pm.test(\"message is 非会员无法领取积分\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('非会员无法领取积分')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/vip/growthpoint/get?ids=null",
					"host": [
						"{{url}}"
					],
					"path": [
						"vip",
						"growthpoint",
						"get"
					],
					"query": [
						{
							"key": "ids",
							"value": "null"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌手粉丝",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is success\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('success')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let id = 2116",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=10`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/artist/fans?id=${id}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/fans",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"fans"
					]
				}
			},
			"response": []
		},
		{
			"name": "歌手粉丝数量",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is success\",()=>{",
							"  let data = pm.response.json()",
							"    pm.expect(data.message).to.be.equal('success')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let id = 2116",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=10`)",
							"}",
							"",
							"if(offset !== \"\" && offset !== null && offset !== undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"",
							"let url = `http://localhost:3000/artist/follow/count?id=${id}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/follow/count",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"follow",
						"count"
					]
				}
			},
			"response": []
		},
		{
			"name": "数字专辑销量",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/digitalAlbum/sales?ids=120605500,125080528",
					"host": [
						"{{url}}"
					],
					"path": [
						"digitalAlbum",
						"sales"
					],
					"query": [
						{
							"key": "ids",
							"value": "120605500,125080528"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "数字专辑详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"product not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.product).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/digitalAlbum/detail?id=120605500",
					"host": [
						"{{url}}"
					],
					"path": [
						"digitalAlbum",
						"detail"
					],
					"query": [
						{
							"key": "id",
							"value": "120605500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌曲相关视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is ok\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.message).to.be.equal('ok')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/mlog/music/rcmd?songid=115569",
					"host": [
						"{{url}}"
					],
					"path": [
						"mlog",
						"music",
						"rcmd"
					],
					"query": [
						{
							"key": "songid",
							"value": "115569"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "公开隐私歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"message is ok\",()=>{",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.message).to.be.equal('ok')",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/playlist/privacy?id=12197860746",
					"host": [
						"{{url}}"
					],
					"path": [
						"playlist",
						"privacy"
					],
					"query": [
						{
							"key": "id",
							"value": "12197860746"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "获取客户端歌曲下载 url",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is ok\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.id).to.be.equal(114628)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id = 114628",
							"let br = pm.environment.get('br')",
							"",
							"let params = []",
							"",
							"if(br !== \"\" && br !== null && br !== undefined){",
							"  params.push(`br=${br}`)",
							"}else{",
							"  params.push(`br=999000`)",
							"}",
							"",
							"let url = `http://localhost:3000/song/download/url?id=${id}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/song/download/url",
					"host": [
						"{{url}}"
					],
					"path": [
						"song",
						"download",
						"url"
					]
				}
			},
			"response": []
		},
		{
			"name": "获取歌手视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is ok\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.message).to.be.equal('ok')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let size = pm.environment.get('size')",
							"let order = pm.environment.get('order')",
							"let id = 2116",
							"let params = []",
							"",
							"if(size !== \"\" && size !== null && size !== undefined){",
							"  params.push(`size=${size}`)",
							"}else{",
							"  params.push(`size=10`)",
							"}",
							"if(order !== \"\" && order !== null && order !== undefined){",
							"  params.push(`order=${order}`)",
							"}else{",
							"  params.push(`order=0`)",
							"}",
							"let url = `http://localhost:3000/artist/video?id=${id}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/artist/video",
					"host": [
						"{{url}}"
					],
					"path": [
						"artist",
						"video"
					]
				}
			},
			"response": []
		},
		{
			"name": "最近播放-歌曲",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"let url = `http://localhost:3000/record/recent/song?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/record/recent/song",
					"host": [
						"{{url}}"
					],
					"path": [
						"record",
						"recent",
						"song"
					]
				}
			},
			"response": []
		},
		{
			"name": "最近播放-视频",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"let url = `http://localhost:3000/record/recent/video?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/record/recent/video",
					"host": [
						"{{url}}"
					],
					"path": [
						"record",
						"recent",
						"video"
					]
				}
			},
			"response": []
		},
		{
			"name": "最近播放-声音",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"let url = `http://localhost:3000/record/recent/voice?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/record/recent/voice",
					"host": [
						"{{url}}"
					],
					"path": [
						"record",
						"recent",
						"voice"
					]
				}
			},
			"response": []
		},
		{
			"name": "最近播放-歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"let url = `http://localhost:3000/record/recent/playlist?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/record/recent/playlist",
					"host": [
						"{{url}}"
					],
					"path": [
						"record",
						"recent",
						"playlist"
					]
				}
			},
			"response": []
		},
		{
			"name": "最近播放-专辑",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"let url = `http://localhost:3000/record/recent/album?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/record/recent/album",
					"host": [
						"{{url}}"
					],
					"path": [
						"record",
						"recent",
						"album"
					]
				}
			},
			"response": []
		},
		{
			"name": "最近播放-播客",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit = pm.environment.get('limit')",
							"let params = []",
							"",
							"if(limit !== \"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=100`)",
							"}",
							"let url = `http://localhost:3000/record/recent/album?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/record/recent/dj",
					"host": [
						"{{url}}"
					],
					"path": [
						"record",
						"recent",
						"dj"
					]
				}
			},
			"response": []
		},
		{
			"name": "签到进度",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/signin/progress",
					"host": [
						"{{url}}"
					],
					"path": [
						"signin",
						"progress"
					]
				}
			},
			"response": []
		},
		{
			"name": "内部版本接口",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"version not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.version).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/inner/version",
					"host": [
						"{{url}}"
					],
					"path": [
						"inner",
						"version"
					]
				}
			},
			"response": []
		},
		{
			"name": "黑胶时光机",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"detail not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.detail).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let limit =pm.environment.get('limit')",
							"let startTime =pm.environment.get('startTime')",
							"let endTime =pm.environment.get('endTime')",
							"",
							"let defaultEndtime = Date.now()",
							"",
							"let params = []",
							"",
							"if(limit !==\"\" && limit !== null && limit !== undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=60`)",
							"}",
							"",
							"if(startTime !==\"\" && startTime !== null && startTime !== undefined){",
							"  params.push(`startTime=${startTime}`)",
							"}else{",
							"  params.push(`startTime=1700000000000`)",
							"}",
							"",
							"if(endTime !==\"\" && endTime !== null && endTime !== undefined){",
							"  params.push(`endTime=${endTime}`)",
							"}else{",
							"  params.push(`endTime=${defaultEndtime}`)",
							"}",
							"",
							"let url = `http://localhost:3000/vip/timemachine?${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/vip/timemachine",
					"host": [
						"{{url}}"
					],
					"path": [
						"vip",
						"timemachine"
					]
				}
			},
			"response": []
		},
		{
			"name": "音乐百科 - 简要信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/song/wiki/summary?id=114628",
					"host": [
						"{{url}}"
					],
					"path": [
						"song",
						"wiki",
						"summary"
					],
					"query": [
						{
							"key": "id",
							"value": "114628"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "乐谱列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data not empty\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data).to.not.be.empty",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/sheet/list?id=114628",
					"host": [
						"{{url}}"
					],
					"path": [
						"sheet",
						"list"
					],
					"query": [
						{
							"key": "id",
							"value": "114628"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "乐谱内容",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data length > 0\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/sheet/preview?id=143190",
					"host": [
						"{{url}}"
					],
					"path": [
						"sheet",
						"preview"
					],
					"query": [
						{
							"key": "id",
							"value": "143190"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "曲风列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"data length > 0\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/style/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"style",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "曲风偏好",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"tagPreferenceVos length > 0\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.tagPreferenceVos.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/style/preference",
					"host": [
						"{{url}}"
					],
					"path": [
						"style",
						"preference"
					]
				}
			},
			"response": []
		},
		{
			"name": "曲风详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"tagId is 1000\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.tagId).to.be.equal(1000)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/style/detail?tagId=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"style",
						"detail"
					],
					"query": [
						{
							"key": "tagId",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "曲风-歌曲",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"songs is array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.songs.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let tagId = 1000",
							"let size = pm.environment.get('size')",
							"let sort = pm.environment.get('sort')",
							" ",
							"let defaultSort = [0,1]",
							"let getRomdomValue = array => array[Math.floor(Math.random() * array.length)]",
							"",
							"let params = []",
							"",
							"if(size !== \"\" && size !==null && size !== undefined){",
							"  params.push(`size=${size}`)",
							"}else{",
							"  params.push(`size=20`)",
							"}",
							"",
							"if(sort !== \"\" && sort !==null && sort !== undefined){",
							"  params.push(`sort=${sort}`)",
							"}else{",
							"  params.push(`sort=${getRomdomValue(defaultSort)}`)",
							"}",
							"",
							"let url =`http://localhost:3000/style/song?tagId=${tagId}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/style/song",
					"host": [
						"{{url}}"
					],
					"path": [
						"style",
						"song"
					]
				}
			},
			"response": []
		},
		{
			"name": "曲风-专辑",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"album is array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.albums.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let tagId = 1000",
							"let size = pm.environment.get('size')",
							"let sort = pm.environment.get('sort')",
							" ",
							"let defaultSort = [0,1]",
							"let getRomdomValue = array => array[Math.floor(Math.random() * array.length)]",
							"",
							"let params = []",
							"",
							"if(size !== \"\" && size !==null && size !== undefined){",
							"  params.push(`size=${size}`)",
							"}else{",
							"  params.push(`size=20`)",
							"}",
							"",
							"if(sort !== \"\" && sort !==null && sort !== undefined){",
							"  params.push(`sort=${sort}`)",
							"}else{",
							"  params.push(`sort=${getRomdomValue(defaultSort)}`)",
							"}",
							"",
							"let url =`http://localhost:3000/style/album?tagId=${tagId}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/style/album",
					"host": [
						"{{url}}"
					],
					"path": [
						"style",
						"album"
					]
				}
			},
			"response": []
		},
		{
			"name": "曲风-歌单",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"playlist is array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.playlist.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let tagId = 1000",
							"let size = pm.environment.get('size')",
							" ",
							"let params = []",
							"",
							"if(size !== \"\" && size !==null && size !== undefined){",
							"  params.push(`size=${size}`)",
							"}else{",
							"  params.push(`size=20`)",
							"}",
							"",
							"",
							"let url =`http://localhost:3000/style/playlist?tagId=${tagId}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/style/playlist",
					"host": [
						"{{url}}"
					],
					"path": [
						"style",
						"playlist"
					]
				}
			},
			"response": []
		},
		{
			"name": "曲风-歌手",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"artists is array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.artists.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let tagId = 1000",
							"let size = pm.environment.get('size')",
							" ",
							"let params = []",
							"",
							"if(size !== \"\" && size !==null && size !== undefined){",
							"  params.push(`size=${size}`)",
							"}else{",
							"  params.push(`size=20`)",
							"}",
							"",
							"",
							"let url =`http://localhost:3000/style/artist?tagId=${tagId}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/style/artist",
					"host": [
						"{{url}}"
					],
					"path": [
						"style",
						"artist"
					]
				}
			},
			"response": []
		},
		{
			"name": "云村星评馆 - 简要评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"blocks is array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.blocks.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/starpick/comments/summary",
					"host": [
						"{{url}}"
					],
					"path": [
						"starpick",
						"comments",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "私人 DJ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"aiDjResources is array\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.aiDjResources.length).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/aidj/content/rcmd",
					"host": [
						"{{url}}"
					],
					"path": [
						"aidj",
						"content",
						"rcmd"
					]
				}
			},
			"response": []
		},
		{
			"name": "回忆坐标",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"songId is 114628\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.songInfoDto.songId).to.be.equal(114628)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/music/first/listen/info?id=114628",
					"host": [
						"{{url}}"
					],
					"path": [
						"music",
						"first",
						"listen",
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "114628"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "根据nickname获取userid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"songId is 114628\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.nicknames.he20020211).to.be.equal(358047007)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/get/userids?nicknames=he20020211",
					"host": [
						"{{url}}"
					],
					"path": [
						"get",
						"userids"
					],
					"query": [
						{
							"key": "nicknames",
							"value": "he20020211"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "专辑简要百科信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"albumId is 168223858\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.albumId).to.be.equal(168223858)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ugc/album/get?id=168223858",
					"host": [
						"{{url}}"
					],
					"path": [
						"ugc",
						"album",
						"get"
					],
					"query": [
						{
							"key": "id",
							"value": "168223858"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌曲简要百科信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"songId is 28302514\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.songId).to.be.equal(28302514)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ugc/song/get?id=28302514",
					"host": [
						"{{url}}"
					],
					"path": [
						"ugc",
						"song",
						"get"
					],
					"query": [
						{
							"key": "id",
							"value": "28302514"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌手简要百科信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"artistId is 6075\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.artistId).to.be.equal(6075)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ugc/artist/get?id=6075",
					"host": [
						"{{url}}"
					],
					"path": [
						"ugc",
						"artist",
						"get"
					],
					"query": [
						{
							"key": "id",
							"value": "6075"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "mv简要百科信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"mvId is 14572641\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.mvId).to.be.equal(14572641)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ugc/mv/get?id=14572641",
					"host": [
						"{{url}}"
					],
					"path": [
						"ugc",
						"mv",
						"get"
					],
					"query": [
						{
							"key": "id",
							"value": "14572641"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "搜索歌手",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"totalCount > 0\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.totalCount).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let keyword = '张学友'",
							"let limit = pm.environment.get('limit')",
							"",
							"let params = []",
							"",
							"if(limit !==\"\" && limit !== null && limit !==undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=40`)",
							"}",
							"",
							"let url = `http://localhost:3000/ugc/artist/search?keyword=${keyword}&${params}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ugc/artist/search",
					"host": [
						"{{url}}"
					],
					"path": [
						"ugc",
						"artist",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "用户贡献内容",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is 成功\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.message).to.be.equal('成功')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let type = [1,2,3,4,5,,6,101,103]",
							"let limit = pm.environment.get('limit')",
							"let offset = pm.environment.get('offset')",
							"let auditStatus = pm.environment.get('auditStatus')",
							"let order = pm.environment.get('order')",
							"",
							"let defaultAuditStatus = [0,1,4,5,-5]",
							"let defaultOrder = ['desc','asc']",
							"",
							"let getRomdomValue = array => array[Math.floor(Math.random() * array.length)]",
							"",
							"let params = []",
							"",
							"if(order !==\"\" && order !== null && order !==undefined){",
							"  params.push(`order=${order}`)",
							"}else{",
							"  params.push(`order=${getRomdomValue(defaultOrder)}`)",
							"}",
							"",
							"if(auditStatus !==\"\" && auditStatus !== null && auditStatus !==undefined){",
							"  params.push(`auditStatus=${auditStatus}`)",
							"}else{",
							"  params.push(`auditStatus=${getRomdomValue(defaultAuditStatus)}`)",
							"}",
							"if(limit !==\"\" && limit !== null && limit !==undefined){",
							"  params.push(`limit=${limit}`)",
							"}else{",
							"  params.push(`limit=10`)",
							"}",
							"",
							"if(offset !==\"\" && offset !== null && offset !==undefined){",
							"  params.push(`offset=${offset}`)",
							"}else{",
							"  params.push(`offset=0`)",
							"}",
							"",
							"let url = `http://localhost:3000/ugc/detail?type=${getRomdomValue(type)}&${params.join('&')}`",
							"",
							"pm.request.url = url"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ugc/detail",
					"host": [
						"{{url}}"
					],
					"path": [
						"ugc",
						"detail"
					]
				}
			},
			"response": []
		},
		{
			"name": "用户贡献条目、积分、云贝数量",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"userId is 358047007\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.userId).to.be.equal(358047007)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ugc/user/devote",
					"host": [
						"{{url}}"
					],
					"path": [
						"ugc",
						"user",
						"devote"
					]
				}
			},
			"response": []
		},
		{
			"name": "年度听歌报告",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"// pm.test(\"userId is 358047007\",()=>{",
							"//   let data = pm.response.json()",
							"//   pm.expect(data.data.userId).to.be.equal(358047007)",
							"// })"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/summary/annual?year=2023",
					"host": [
						"{{url}}"
					],
					"path": [
						"summary",
						"annual"
					],
					"query": [
						{
							"key": "year",
							"value": "2023"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "本地歌曲文件匹配网易云歌曲信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"name is 富士山下\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.result.songs[0].name).to.be.equal('富士山下')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/search/match?title=富士山下&album=&artist=陈奕迅&duration=259.21&md5=bd708d006912a09d827f02e754cf8e56",
					"host": [
						"{{url}}"
					],
					"path": [
						"search",
						"match"
					],
					"query": [
						{
							"key": "title",
							"value": "富士山下"
						},
						{
							"key": "album",
							"value": ""
						},
						{
							"key": "artist",
							"value": "陈奕迅"
						},
						{
							"key": "duration",
							"value": "259.21"
						},
						{
							"key": "md5",
							"value": "bd708d006912a09d827f02e754cf8e56"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌曲音质详情",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"message is 成功\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.message).to.be.equal('成功')",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/song/music/detail?id=2082700997",
					"host": [
						"{{url}}"
					],
					"path": [
						"song",
						"music",
						"detail"
					],
					"query": [
						{
							"key": "id",
							"value": "2082700997"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "歌曲红心数量",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", ()=> {",
							"  pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"count > 0\",()=>{",
							"  let data = pm.response.json()",
							"  pm.expect(data.data.count).to.be.above(0)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/song/red/count?id=186016",
					"host": [
						"{{url}}"
					],
					"path": [
						"song",
						"red",
						"count"
					],
					"query": [
						{
							"key": "id",
							"value": "186016"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// // 获取当前请求的 URL 路径",
					"// const relativePath = pm.request.url.getPath();",
					"// // 获取 baseUrl 环境变量",
					"// const baseUrl = pm.environment.get(\"url\");",
					"// // 动态设置完整 URL",
					"// pm.request.url = baseUrl + relativePath;",
					"",
					"",
					"// // "
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}